{
  "packageName": "@awesome-cordova-plugins/imap",
  "displayName": "Imap",
  "description": "\nThis plugin will enable an Ionic application to use the IMAP (Internet Message Access Protocol) features.\nThis plugin is in Beta version and it offers support only for Android.\nThe plugin uses Java Mail API.\nPlanned improvements and support for iOS.\n",
  "usage": "\n```typescript\nimport { Imap } from '@awesome-cordova-plugins/imap/ngx';\n\n\nconstructor(private imap: Imap) { }\n\n...\n\n\nthis.imap.connect({\n host: 'imap.gmail.com',\n user: 'my_email@gmail.com',\n password: 'my-pass'\n})\n  .then((res: Connection) => console.log(res))\n  .catch((error) => console.error(error));\n\n\n\n this.imap.disconnect()\n  .then((res: boolean) => console.log(res))\n  .catch((error: any) => console.error(error));\n\n\n\nthis.imap.isConnected()\n  .then((res: boolean) => console.log(res))\n  .catch((error: any) => console.error(error));\n\n Note: Connected to an IMAP service is REQUIRED to be able to get data from the below functions.\n\n\n  this.imap.listMailFolders()\n  .then((res: boolean) => console.log(res))\n  .catch((error: any) => console.error(error));\n\n\n  this.imap.getMessageCountByFolderName('INBOX')\n  .then((res: number) => {\n  // Returns the count of the messages in the folder as a result\n   console.log(res)\n  })\n  .catch((error: any) => {\n    console.error(error)\n  });\n\n\n\n  this.imap.searchMessagesByDatePeriod('INBOX', 1601503200000, Comparison.GE)\n  .then((res: number[]) => {\n  // Returns array with messages' consecutive numbers\n  // ex. [1207, 1208, 1209]\n   console.log(res)\n  })\n  .catch((error: any) => {\n    console.error(error)\n  });\n\n\n  this.imap.listMessagesHeadersByConsecutiveNumber('INBOX', 1200, 1280)\n  .then((res: Message[]) => {\n  //  Returns array with messages' headers data\n   console.log(res)\n  })\n  .catch((error: any) => {\n    console.error(error)\n  });\n\n\n  this.imap.listMessagesHeadersByDate('INBOX', 1601503200000, Comparison.GE)\n  .then((res: Message[]) => {\n  // Returns array with messages' headers data\n   console.log(res)\n  })\n  .catch((error: any) => {\n    console.error(error)\n  });\n\n\n  this.imap.getFullMessageData('INBOX', 1205)\n  .then((res: Message) => {\n  // Returns \"Message\" object with the full message data including attachments.\n   console.log(res)\n  })\n  .catch((error: any) => {\n    console.error(error)\n  });\n\n\n  this.imap.copyToFolder('INBOX', 'Spam', [1204, 1205, 1206, 1207])\n  .then((res: boolean) => {\n  // Returns \"true\" if the process is successful, else returns \"false\".\n   console.log(res)\n  })\n  .catch((error: any) => {\n    console.error(error)\n  });\n\n\n  * Sets a flag on a message\n  * \"setFlag()\" can be used for deleting messages setting the Delete flag to \"FlagEnum.DELETED\"\n  this.imap.setFlag('INBOX', [1206, 1205, 1204], FlagEnum.SEEN, true)\n  .then((res: ModificationResult) => {\n\n   // res.status - return true or false based on the deletion success\n\n  //res.modifiedMessages - for ex.[1206, 1205, 1204];\n\n  })\n  .catch((error: any) => {\n    console.error(error)\n  });\n\n```\n",
  "platforms": [
    "Android"
  ],
  "repo": "https://github.com/aleksandar888/cordova-plugin-imap.git",
  "cordovaPlugin": {
    "name": "cordova-plugin-imap"
  }
}