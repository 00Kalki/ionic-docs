{
  "filePath": "./src/components/checkbox/checkbox.tsx",
  "encapsulation": "shadow",
  "tag": "ion-checkbox",
  "docs": "",
  "docsTags": [
    {
      "name": "virtualProp",
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use."
    },
    {
      "name": "part",
      "text": "container - The container for the checkbox mark."
    },
    {
      "name": "part",
      "text": "mark - The checkmark used to indicate the checked state."
    }
  ],
  "usage": {},
  "props": [
    {
      "name": "checked",
      "type": "boolean",
      "mutable": true,
      "attr": "checked",
      "reflectToAttr": false,
      "docs": "If `true`, the checkbox is selected.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "color",
      "type": "\"danger\" | \"dark\" | \"light\" | \"medium\" | \"primary\" | \"secondary\" | \"success\" | \"tertiary\" | \"warning\" | string & Record<never, never> | undefined",
      "mutable": false,
      "attr": "color",
      "reflectToAttr": true,
      "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
      "docsTags": [],
      "values": [
        {
          "value": "danger",
          "type": "string"
        },
        {
          "value": "dark",
          "type": "string"
        },
        {
          "value": "light",
          "type": "string"
        },
        {
          "value": "medium",
          "type": "string"
        },
        {
          "value": "primary",
          "type": "string"
        },
        {
          "value": "secondary",
          "type": "string"
        },
        {
          "value": "success",
          "type": "string"
        },
        {
          "value": "tertiary",
          "type": "string"
        },
        {
          "value": "warning",
          "type": "string"
        },
        {
          "type": "string & Record<never, never>"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "disabled",
      "type": "boolean",
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": false,
      "docs": "If `true`, the user cannot interact with the checkbox.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "indeterminate",
      "type": "boolean",
      "mutable": true,
      "attr": "indeterminate",
      "reflectToAttr": false,
      "docs": "If `true`, the checkbox will visually appear as indeterminate.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "name",
      "type": "string",
      "mutable": false,
      "attr": "name",
      "reflectToAttr": false,
      "docs": "The name of the control, which is submitted with the form data.",
      "docsTags": [],
      "default": "this.inputId",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "value",
      "type": "any",
      "mutable": false,
      "attr": "value",
      "reflectToAttr": false,
      "docs": "The value of the checkbox does not mean if it's checked or not, use the `checked`\nproperty for that.\n\nThe value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\nit's only used when the checkbox participates in a native `<form>`.",
      "docsTags": [],
      "default": "'on'",
      "values": [
        {
          "type": "any"
        }
      ],
      "optional": false,
      "required": false
    }
  ],
  "methods": [],
  "events": [
    {
      "event": "ionBlur",
      "detail": "void",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the checkbox loses focus.",
      "docsTags": []
    },
    {
      "event": "ionChange",
      "detail": "CheckboxChangeEventDetail<any>",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the checked property has changed.",
      "docsTags": []
    },
    {
      "event": "ionFocus",
      "detail": "void",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the checkbox has focus.",
      "docsTags": []
    }
  ],
  "listeners": [],
  "styles": [
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "Background of the checkbox icon"
    },
    {
      "name": "--background-checked",
      "annotation": "prop",
      "docs": "Background of the checkbox icon when checked"
    },
    {
      "name": "--border-color",
      "annotation": "prop",
      "docs": "Border color of the checkbox icon"
    },
    {
      "name": "--border-color-checked",
      "annotation": "prop",
      "docs": "Border color of the checkbox icon when checked"
    },
    {
      "name": "--border-radius",
      "annotation": "prop",
      "docs": "Border radius of the checkbox icon"
    },
    {
      "name": "--border-style",
      "annotation": "prop",
      "docs": "Border style of the checkbox icon"
    },
    {
      "name": "--border-width",
      "annotation": "prop",
      "docs": "Border width of the checkbox icon"
    },
    {
      "name": "--checkmark-color",
      "annotation": "prop",
      "docs": "Color of the checkbox checkmark when checked"
    },
    {
      "name": "--checkmark-width",
      "annotation": "prop",
      "docs": "Stroke width of the checkbox checkmark"
    },
    {
      "name": "--size",
      "annotation": "prop",
      "docs": "Size of the checkbox icon"
    },
    {
      "name": "--transition",
      "annotation": "prop",
      "docs": "Transition of the checkbox icon"
    }
  ],
  "slots": [],
  "parts": [
    {
      "name": "container",
      "docs": "The container for the checkbox mark."
    },
    {
      "name": "mark",
      "docs": "The checkmark used to indicate the checked state."
    }
  ],
  "dependents": [
    "ion-select-popover"
  ],
  "dependencies": [],
  "dependencyGraph": {
    "ion-select-popover": [
      "ion-checkbox"
    ]
  }
}