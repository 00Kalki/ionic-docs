{
  "filePath": "./src/components/accordion/accordion.tsx",
  "encapsulation": "shadow",
  "tag": "ion-accordion",
  "readme": "# ion-accordion\n\nAccordions provide collapsible sections in your content to reduce vertical space while providing a way of organizing and grouping information. All `ion-accordion` components should be grouped inside `ion-accordion-group` components.\n\n## Anatomy\n\n### Header\n\nThe `header` slot is used as the toggle that will expand or collapse your accordion. We recommend you use an `ion-item` here to take advantage of the accessibility and theming functionalities.\n\nWhen using `ion-item` in the `header` slot, the `ion-item`'s `button` prop is set to `true` and the `detail` prop is set to `false`. In addition, we will also automatically add a toggle icon to the `ion-item`. This icon will automatically be rotated when you expand or collapse the accordion. See [Customizing Icons](#customizing-icons) for more information.\n\n### Content\n\nThe `content` slot is used as the part of the accordion that is revealed or hidden depending on the state of your accordion. You can place anything here except for another `ion-content` instance as only one instance of `ion-content` should be added per page.\n\n## Customizing Icons\n\nWhen using an `ion-item` in the `header` slot, we automatically add an `ion-icon`. The type of icon used can be controlled by the `toggleIcon` property, and the slot it is added to can be controlled with the `toggleIconSlot` property.\n\nIf you would like to manage the icon yourself or use an icon that is not an `ion-icon`, you can add the `ion-accordion-toggle-icon` class to the icon element.\n\nRegardless of which option you choose, the icon will automatically be rotated when you expand or collapse the accordion.\n\n## Expansion Styles\n\n### Built in Styles\n\nThere are two built in expansion styles: `compact` and `inset`. This expansion style is set via the `expand` property on `ion-accordion-group`. When `expand=\"inset\"`, the accordion group is given a border radius. On `md` mode, the entire accordion will shift down when it is opened.\n\n### Custom Styles\n\nYou can customize the expansion behavior by styling based on the accordion's state:\n\n```css\nion-accordion {\n  margin: 0 auto;\n}\n\nion-accordion.accordion-expanding,\nion-accordion.accordion-expanded {\n  width: calc(100% - 32px);\n  margin: 16px auto;\n}\n```\n\nThis example will cause an accordion to have its width shrink when it is opened. You can also style the accordion differently when it is closing by targeting the `.accordion-collapsing` and `.accordion-collapsed` classes.\n\nIf you need to target specific pieces of the accordion, we recommend targeting the element directly. For example, if you want to customize the `ion-item` in your `header` slot when the accordion is expanded, you can use the following selector:\n\n```css\nion-accordion.accordion-expanding ion-item[slot=\"header\"],\nion-accordion.accordion-expanded ion-item[slot=\"header\"] {\n  --color: red;\n}\n```\n\nThis example will set the text color of the header `ion-item` to red when the accordion is expanded.\n\n## Accessibility\n\n### Animations\n\nBy default, animations are enabled when expanding or collapsing an accordion item. Animations will be automatically disabled when the `prefers-reduced-motion` media query is supported and set to `reduce`. For browsers that do not support this, animations can be disabled by setting the `animated` config in your Ionic Framework app.\n\n### Keyboard Navigation\n\nWhen used inside an `ion-accordion-group`, `ion-accordion` has full keyboard support for interacting with the component. The following table details what each key does:\n\n| Key                | Function                                                     |\n| ------------------ | ------------------------------------------------------------ |\n| `Space` or `Enter` | When focus is on the accordion header, the accordion will collapse or expand depending on the state of the component. |\n| `Tab`              | Moves focus to the next focusable element.                   |\n| `Shift` + `Tab`    | Moves focus to the previous focusable element.               |\n| `Down Arrow`       | - When focus is on an accordion header, moves focus to the next accordion header.  <br />- When focus is on the last accordion header, moves focus to the first accordion header. |\n| `Up Arrow`         | - When focus is on an accordion header, moves focus to the previous accordion header.  <br />- When focus is on the first accordion header, moves focus to the last accordion header. |\n| `Home`             | When focus is on an accordion header, moves focus to the first accordion header. |\n| `End`              | When focus is on an accordion header, moves focus to the last accordion header. |\n",
  "docs": "Accordions provide collapsible sections in your content to reduce vertical space while providing a way of organizing and grouping information. All `ion-accordion` components should be grouped inside `ion-accordion-group` components.",
  "docsTags": [
    {
      "name": "virtualProp",
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use."
    },
    {
      "name": "slot",
      "text": "header - Content is placed at the top and is used to\nexpand or collapse the accordion item."
    },
    {
      "name": "slot",
      "text": "content - Content is placed below the header and is\nshown or hidden based on expanded state."
    },
    {
      "name": "part",
      "text": "header - The wrapper element for the header slot."
    },
    {
      "name": "part",
      "text": "content - The wrapper element for the content slot."
    },
    {
      "name": "part",
      "text": "expanded - The expanded element. Can be used in combination\nwith the `header` and `content` parts (i.e. `::part(header expanded)`)."
    }
  ],
  "usage": {
    "angular": "```html\n<!-- Basic -->\n<ion-accordion-group>\n  <ion-accordion value=\"colors\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<!-- Custom Icon -->\n<ion-accordion-group>\n  <ion-accordion value=\"colors\" toggle-icon=\"arrow-down-circle\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\" toggle-icon=\"arrow-down-circle\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\" toggle-icon=\"arrow-down-circle\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<!-- Open Accordion -->\n<ion-accordion-group value=\"colors\">\n  <ion-accordion value=\"colors\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<!-- Multiple Accordions -->\n<ion-accordion-group [multiple]=\"true\" [value]=\"['colors', 'numbers']\">\n  <ion-accordion value=\"colors\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n```\n\n**component.html**\n```html\n<!-- Getting and setting the state of the accordion group -->\n<ion-accordion-group value=\"numbers\">\n  <ion-accordion value=\"colors\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<ion-button (click)=\"logAccordionValue()\">Log Value of Accordion Group</ion-button>\n<ion-button (click)=\"closeAccordion()\">Close All Accordions</ion-button>\n```\n\n**component.ts**\n```typescript\nimport { Component, ViewChild } from '@angular/core';\nimport { IonAccordionGroup } from '@ionic/angular';\n\n@Component({…})\nexport class MyComponent {\n  @ViewChild(IonAccordionGroup, { static: true }) accordionGroup: IonAccordionGroup;\n  constructor() {}\n  \n  logAccordionValue() {\n    console.log(this.accordionGroup.value);\n  }\n  \n  closeAccordion() {\n    this.accordionGroup.value = undefined;\n  }  \n}\n```",
    "javascript": "```html\n<!-- Basic -->\n<ion-accordion-group>\n  <ion-accordion value=\"colors\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<!-- Custom Icon -->\n<ion-accordion-group>\n  <ion-accordion value=\"colors\" toggle-icon=\"arrow-down-circle\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\" toggle-icon=\"arrow-down-circle\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\" toggle-icon=\"arrow-down-circle\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<!-- Open Accordion -->\n<ion-accordion-group value=\"colors\">\n  <ion-accordion value=\"colors\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<!-- Multiple Accordions -->\n<ion-accordion-group multiple=\"true\" id=\"multiple\">\n  <ion-accordion value=\"colors\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<!-- Getting and setting the state of the accordion group -->\n<ion-accordion-group value=\"numbers\" id=\"state\">\n  <ion-accordion value=\"colors\">\n    <ion-item slot=\"header\">\n      <ion-label>Colors</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Red</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Green</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Blue</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"shapes\">\n    <ion-item slot=\"header\">\n      <ion-label>Shapes</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>Circle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Triangle</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>Square</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n  <ion-accordion value=\"numbers\">\n    <ion-item slot=\"header\">\n      <ion-label>Numbers</ion-label>\n    </ion-item>\n\n    <ion-list slot=\"content\">\n      <ion-item>\n        <ion-label>1</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>2</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>3</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-accordion>\n</ion-accordion-group>\n\n<ion-button onclick=\"logAccordionValue()\">Log Value of Accordion Group</ion-button>\n<ion-button onclick=\"closeAccordion()\">Close All Accordions</ion-button>\n\n<script>\n  const accordionGroup = document.querySelector('ion-accordion-group#state');\n  let accordionGroupMultiple = document.querySelector('ion-accordion-group#multiple');\n  \n  accordionGroupMultiple.value = ['colors', 'numbers'];\n  \n  const logAccordionValue = () => {\n    console.log(accordionGroup.value);\n  }\n  const closeAccordion = () => {\n    accordionGroup.value = undefined;\n  }\n</script>\n```\n",
    "react": "```tsx\nimport React, { useRef } from 'react';\n\nimport { IonContent, IonAccordionGroup, IonAccordion, IonItem, IonLabel, IonList, IonPage } from '@ionic/react';\nimport { arrowDownCircle } from 'ionicons/icons';\n\nexport const AccordionExample: React.FC = () => {\n  const accordionGroupRef = useRef(null);\n  const logAccordionValue = () => {\n    if (accordionGroupRef.current) {\n      console.log(accordionGroupRef.current.value);\n    }\n  }\n  const closeAccordion = () => {\n    if (accordionGroupRef.current) {\n      accordionGroupRef.current.value = undefined;\n    }\n  }\n  \n  return (\n    <IonPage>\n      <IonContent>\n        {/*-- Basic --*/}\n        <IonAccordionGroup>\n          <IonAccordion value=\"colors\">\n            <IonItem slot=\"header\">\n              <IonLabel>Colors</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Red</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Green</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Blue</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"shapes\">\n            <IonItem slot=\"header\">\n              <IonLabel>Shapes</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Circle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Triangle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Square</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"numbers\">\n            <IonItem slot=\"header\">\n              <IonLabel>Numbers</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>1</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>2</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>3</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n        </IonAccordionGroup>\n      \n        {/*-- Custom Icon --*/}\n        <IonAccordionGroup>\n          <IonAccordion value=\"colors\" toggleIcon={arrowDownCircle}>\n            <IonItem slot=\"header\">\n              <IonLabel>Colors</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Red</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Green</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Blue</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"shapes\" toggleIcon={arrowDownCircle}>\n            <IonItem slot=\"header\">\n              <IonLabel>Shapes</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Circle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Triangle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Square</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"numbers\" toggleIcon={arrowDownCircle}>\n            <IonItem slot=\"header\">\n              <IonLabel>Numbers</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>1</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>2</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>3</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n        </IonAccordionGroup>\n      \n        {/*-- Open Accordion --*/}\n        <IonAccordionGroup value=\"colors\">\n          <IonAccordion value=\"colors\">\n            <IonItem slot=\"header\">\n              <IonLabel>Colors</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Red</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Green</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Blue</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"shapes\">\n            <IonItem slot=\"header\">\n              <IonLabel>Shapes</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Circle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Triangle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Square</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"numbers\">\n            <IonItem slot=\"header\">\n              <IonLabel>Numbers</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>1</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>2</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>3</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n        </IonAccordionGroup>\n      \n        {/*-- Multiple Accordions --*/}\n        <IonAccordionGroup multiple={true} value={['colors', 'numbers']}>\n          <IonAccordion value=\"colors\">\n            <IonItem slot=\"header\">\n              <IonLabel>Colors</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Red</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Green</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Blue</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"shapes\">\n            <IonItem slot=\"header\">\n              <IonLabel>Shapes</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Circle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Triangle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Square</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"numbers\">\n            <IonItem slot=\"header\">\n              <IonLabel>Numbers</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>1</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>2</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>3</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n        </IonAccordionGroup>\n        \n        {/*-- Getting and setting the state of the accordion group --*/}\n        <IonAccordionGroup value=\"numbers\" ref={accordionGroupRef}>\n          <IonAccordion value=\"colors\">\n            <IonItem slot=\"header\">\n              <IonLabel>Colors</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Red</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Green</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Blue</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"shapes\">\n            <IonItem slot=\"header\">\n              <IonLabel>Shapes</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>Circle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Triangle</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>Square</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n          <IonAccordion value=\"numbers\">\n            <IonItem slot=\"header\">\n              <IonLabel>Numbers</IonLabel>\n            </IonItem>\n      \n            <IonList slot=\"content\">\n              <IonItem>\n                <IonLabel>1</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>2</IonLabel>\n              </IonItem>\n              <IonItem>\n                <IonLabel>3</IonLabel>\n              </IonItem>\n            </IonList>\n          </IonAccordion>\n        </IonAccordionGroup>\n        \n        <IonButton onClick={() => logAccordionValue()}>Log Value of Accordion Group</IonButton>\n        <IonButton onClick={() => closeAccordion()}>Close All Accordions</IonButton>\n      </IonContent>\n    </IonPage>\n  )\n);\n```\n",
    "stencil": "```tsx\nimport { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'accordion-example',\n  styleUrl: 'accordion-example.css'\n})\nexport const AccordionExample {\n  private accordionGroupRef?: HTMLIonAccordionGroupEl;\n  \n  private logAccordionValue = () => {\n    const { accordionGroupRef } = this;\n    if (accordionGroupRef) {\n      console.log(accordionGroupRef.value);\n    }\n  }\n  \n  private closeAccordion = () => {\n    const { accordionGroupRef } = this;\n    if (accordionGroupRef) {\n      accordionGroupRef.value = undefined;\n    }\n  }\n  \n  render() {\n    return [\n      // Basic\n      <ion-accordion-group>\n        <ion-accordion value=\"colors\">\n          <ion-item slot=\"header\">\n            <ion-label>Colors</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Red</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Green</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Blue</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"shapes\">\n          <ion-item slot=\"header\">\n            <ion-label>Shapes</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Circle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Triangle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Square</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"numbers\">\n          <ion-item slot=\"header\">\n            <ion-label>Numbers</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>1</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>2</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>3</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n      </ion-accordion-group>,\n\n      // Custom Icon\n      <ion-accordion-group>\n        <ion-accordion value=\"colors\" toggle-icon=\"arrow-down-circle\">\n          <ion-item slot=\"header\">\n            <ion-label>Colors</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Red</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Green</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Blue</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"shapes\" toggle-icon=\"arrow-down-circle\">\n          <ion-item slot=\"header\">\n            <ion-label>Shapes</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Circle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Triangle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Square</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"numbers\" toggle-icon=\"arrow-down-circle\">\n          <ion-item slot=\"header\">\n            <ion-label>Numbers</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>1</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>2</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>3</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n      </ion-accordion-group>,\n\n      // Open Accordion\n      <ion-accordion-group value=\"colors\">\n        <ion-accordion value=\"colors\">\n          <ion-item slot=\"header\">\n            <ion-label>Colors</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Red</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Green</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Blue</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"shapes\">\n          <ion-item slot=\"header\">\n            <ion-label>Shapes</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Circle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Triangle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Square</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"numbers\">\n          <ion-item slot=\"header\">\n            <ion-label>Numbers</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>1</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>2</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>3</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n      </ion-accordion-group>,\n\n      // Multiple Accordions\n      <ion-accordion-group multiple={true} value={['colors', 'numbers']}>\n        <ion-accordion value=\"colors\">\n          <ion-item slot=\"header\">\n            <ion-label>Colors</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Red</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Green</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Blue</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"shapes\">\n          <ion-item slot=\"header\">\n            <ion-label>Shapes</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Circle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Triangle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Square</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"numbers\">\n          <ion-item slot=\"header\">\n            <ion-label>Numbers</ion-label>\n          </ion-item>\n\n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>1</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>2</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>3</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n      </ion-accordion-group>,\n      \n      {/* Getting and setting the state of the accordion group */}\n      <ion-accordion-group value=\"numbers\" ref={el => this.accordionGroupRef = el}>\n        <ion-accordion value=\"colors\">\n          <ion-item slot=\"header\">\n            <ion-label>Colors</ion-label>\n          </ion-item>\n      \n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Red</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Green</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Blue</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"shapes\">\n          <ion-item slot=\"header\">\n            <ion-label>Shapes</ion-label>\n          </ion-item>\n      \n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>Circle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Triangle</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>Square</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n        <ion-accordion value=\"numbers\">\n          <ion-item slot=\"header\">\n            <ion-label>Numbers</ion-label>\n          </ion-item>\n      \n          <ion-list slot=\"content\">\n            <ion-item>\n              <ion-label>1</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>2</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label>3</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-accordion>\n      </ion-accordion-group>,\n      \n      <ion-button onClick={() => logAccordionValue()}>Log Value of Accordion Group</ion-button>,\n      <ion-button onClick={() => closeAccordion()}>Close All Accordions</ion-button>,\n    ];\n  }\n);\n```\n",
    "vue": "```html\n<template>\n  <!-- Basic -->\n  <ion-accordion-group>\n    <ion-accordion value=\"colors\">\n      <ion-item slot=\"header\">\n        <ion-label>Colors</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Red</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Green</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Blue</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"shapes\">\n      <ion-item slot=\"header\">\n        <ion-label>Shapes</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Circle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Triangle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Square</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"numbers\">\n      <ion-item slot=\"header\">\n        <ion-label>Numbers</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>1</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>2</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>3</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n  </ion-accordion-group>\n\n  <!-- Custom Icon -->\n  <ion-accordion-group>\n    <ion-accordion value=\"colors\" :toggle-icon=\"arrowDownCircle\">\n      <ion-item slot=\"header\">\n        <ion-label>Colors</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Red</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Green</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Blue</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"shapes\" :toggle-icon=\"arrowDownCircle\">\n      <ion-item slot=\"header\">\n        <ion-label>Shapes</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Circle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Triangle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Square</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"numbers\" :toggle-icon=\"arrowDownCircle\">\n      <ion-item slot=\"header\">\n        <ion-label>Numbers</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>1</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>2</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>3</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n  </ion-accordion-group>\n\n  <!-- Open Accordion -->\n  <ion-accordion-group value=\"colors\">\n    <ion-accordion value=\"colors\">\n      <ion-item slot=\"header\">\n        <ion-label>Colors</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Red</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Green</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Blue</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"shapes\">\n      <ion-item slot=\"header\">\n        <ion-label>Shapes</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Circle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Triangle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Square</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"numbers\">\n      <ion-item slot=\"header\">\n        <ion-label>Numbers</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>1</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>2</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>3</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n  </ion-accordion-group>\n\n  <!-- Multiple Accordions -->\n  <ion-accordion-group :multiple=\"true\" :value=\"['colors', 'numbers']\">\n    <ion-accordion value=\"colors\">\n      <ion-item slot=\"header\">\n        <ion-label>Colors</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Red</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Green</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Blue</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"shapes\">\n      <ion-item slot=\"header\">\n        <ion-label>Shapes</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Circle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Triangle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Square</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"numbers\">\n      <ion-item slot=\"header\">\n        <ion-label>Numbers</ion-label>\n      </ion-item>\n\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>1</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>2</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>3</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n  </ion-accordion-group>\n  \n  <!-- Getting and setting the state of the accordion group -->\n  <ion-accordion-group value=\"numbers\" ref=\"accordionGroup\">\n    <ion-accordion value=\"colors\">\n      <ion-item slot=\"header\">\n        <ion-label>Colors</ion-label>\n      </ion-item>\n  \n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Red</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Green</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Blue</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"shapes\">\n      <ion-item slot=\"header\">\n        <ion-label>Shapes</ion-label>\n      </ion-item>\n  \n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>Circle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Triangle</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Square</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n    <ion-accordion value=\"numbers\">\n      <ion-item slot=\"header\">\n        <ion-label>Numbers</ion-label>\n      </ion-item>\n  \n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>1</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>2</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>3</ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n  </ion-accordion-group>\n  \n  <ion-button @click=\"logAccordionValue()\">Log Value of Accordion Group</ion-button>\n  <ion-button @click=\"closeAccordion()\">Close All Accordions</ion-button>\n</template>\n\n<script>\n  import { IonAccordion, IonAccordionGroup, IonButton, IonItem, IonLabel } from '@ionic/vue';\n  import { defineComponent, ref } from 'vue';\n  import { arrowDownCircle } from 'ionicons/icons';\n\n  export default defineComponent({\n    components: { IonAccordion, IonAccordionGroup, IonButton, IonItem, IonLabel },\n    setup() {\n      const accordionGroup = ref();\n      const logAccordionValue = () => {\n        if (accordionGroup.value) {\n          console.log(accordionGroup.value.$el.value);\n        }\n      }\n      const closeAccordion = () => {\n        if (accordionGroup.value) {\n          accordionGroup.value.$el.value = undefined;\n        }\n      }\n      return {\n        accordionGroup,\n        arrowDownCircle,\n        closeAccordion,\n        logAccordionValue\n      }\n    }\n  });\n</script>\n```\n"
  },
  "props": [
    {
      "name": "disabled",
      "type": "boolean",
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": false,
      "docs": "If `true`, the accordion cannot be interacted with.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "readonly",
      "type": "boolean",
      "mutable": false,
      "attr": "readonly",
      "reflectToAttr": false,
      "docs": "If `true`, the accordion cannot be interacted with,\nbut does not alter the opacity.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "toggleIcon",
      "type": "string",
      "mutable": false,
      "attr": "toggle-icon",
      "reflectToAttr": false,
      "docs": "The toggle icon to use. This icon will be\nrotated when the accordion is expanded\nor collapsed.",
      "docsTags": [],
      "default": "chevronDown",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "toggleIconSlot",
      "type": "\"end\" | \"start\"",
      "mutable": false,
      "attr": "toggle-icon-slot",
      "reflectToAttr": false,
      "docs": "The slot inside of `ion-item` to\nplace the toggle icon. Defaults to `'end'`.",
      "docsTags": [],
      "default": "'end'",
      "values": [
        {
          "value": "end",
          "type": "string"
        },
        {
          "value": "start",
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "value",
      "type": "string",
      "mutable": false,
      "attr": "value",
      "reflectToAttr": false,
      "docs": "The value of the accordion. Defaults to an autogenerated\nvalue.",
      "docsTags": [],
      "default": "`ion-accordion-${accordionIds++}`",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    }
  ],
  "methods": [],
  "events": [],
  "listeners": [],
  "styles": [],
  "slots": [
    {
      "name": "content",
      "docs": "Content is placed below the header and is\nshown or hidden based on expanded state."
    },
    {
      "name": "header",
      "docs": "Content is placed at the top and is used to\nexpand or collapse the accordion item."
    }
  ],
  "parts": [
    {
      "name": "content",
      "docs": "The wrapper element for the content slot."
    },
    {
      "name": "expanded",
      "docs": "The expanded element. Can be used in combination\nwith the `header` and `content` parts (i.e. `::part(header expanded)`)."
    },
    {
      "name": "header",
      "docs": "The wrapper element for the header slot."
    }
  ],
  "dependents": [],
  "dependencies": [
    "ion-icon"
  ],
  "dependencyGraph": {
    "ion-accordion": [
      "ion-icon"
    ]
  }
}