{
  "filePath": "./src/components/select/select.tsx",
  "encapsulation": "shadow",
  "tag": "ion-select",
  "docs": "",
  "docsTags": [
    {
      "name": "virtualProp",
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use."
    },
    {
      "name": "part",
      "text": "placeholder - The text displayed in the select when there is no value."
    },
    {
      "name": "part",
      "text": "text - The displayed value of the select."
    },
    {
      "name": "part",
      "text": "icon - The select icon container."
    }
  ],
  "usage": {},
  "props": [
    {
      "name": "cancelText",
      "type": "string",
      "mutable": false,
      "attr": "cancel-text",
      "reflectToAttr": false,
      "docs": "The text to display on the cancel button.",
      "docsTags": [],
      "default": "'Cancel'",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "compareWith",
      "type": "((currentValue: any, compareValue: any) => boolean) | null | string | undefined",
      "mutable": false,
      "attr": "compare-with",
      "reflectToAttr": false,
      "docs": "A property name or function used to compare object values",
      "docsTags": [],
      "values": [
        {
          "type": "((currentValue: any, compareValue: any) => boolean)"
        },
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "disabled",
      "type": "boolean",
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": false,
      "docs": "If `true`, the user cannot interact with the select.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "interface",
      "type": "\"action-sheet\" | \"alert\" | \"popover\"",
      "mutable": false,
      "attr": "interface",
      "reflectToAttr": false,
      "docs": "The interface the select should use: `action-sheet`, `popover` or `alert`.",
      "docsTags": [],
      "default": "'alert'",
      "values": [
        {
          "value": "action-sheet",
          "type": "string"
        },
        {
          "value": "alert",
          "type": "string"
        },
        {
          "value": "popover",
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "interfaceOptions",
      "type": "any",
      "mutable": false,
      "attr": "interface-options",
      "reflectToAttr": false,
      "docs": "Any additional options that the `alert`, `action-sheet` or `popover` interface\ncan take. See the [ion-alert docs](./alert), the\n[ion-action-sheet docs](./action-sheet) and the\n[ion-popover docs](./popover) for the\ncreate options for each interface.\n\nNote: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.",
      "docsTags": [],
      "default": "{}",
      "values": [
        {
          "type": "any"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "multiple",
      "type": "boolean",
      "mutable": false,
      "attr": "multiple",
      "reflectToAttr": false,
      "docs": "If `true`, the select can accept multiple values.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "name",
      "type": "string",
      "mutable": false,
      "attr": "name",
      "reflectToAttr": false,
      "docs": "The name of the control, which is submitted with the form data.",
      "docsTags": [],
      "default": "this.inputId",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "okText",
      "type": "string",
      "mutable": false,
      "attr": "ok-text",
      "reflectToAttr": false,
      "docs": "The text to display on the ok button.",
      "docsTags": [],
      "default": "'OK'",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "placeholder",
      "type": "string | undefined",
      "mutable": false,
      "attr": "placeholder",
      "reflectToAttr": false,
      "docs": "The text to display when the select is empty.",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "selectedText",
      "type": "null | string | undefined",
      "mutable": false,
      "attr": "selected-text",
      "reflectToAttr": false,
      "docs": "The text to display instead of the selected option's value.",
      "docsTags": [],
      "values": [
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "value",
      "type": "any",
      "mutable": true,
      "attr": "value",
      "reflectToAttr": false,
      "docs": "the value of the select.",
      "docsTags": [],
      "values": [
        {
          "type": "any"
        }
      ],
      "optional": true,
      "required": false
    }
  ],
  "methods": [
    {
      "name": "open",
      "returns": {
        "type": "Promise<any>",
        "docs": ""
      },
      "signature": "open(event?: UIEvent) => Promise<any>",
      "parameters": [],
      "docs": "Open the select overlay. The overlay is either an alert, action sheet, or popover,\ndepending on the `interface` property on the `ion-select`.",
      "docsTags": [
        {
          "name": "param",
          "text": "event The user interface event that called the open."
        }
      ]
    }
  ],
  "events": [
    {
      "event": "ionBlur",
      "detail": "void",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the select loses focus.",
      "docsTags": []
    },
    {
      "event": "ionCancel",
      "detail": "void",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the selection is cancelled.",
      "docsTags": []
    },
    {
      "event": "ionChange",
      "detail": "SelectChangeEventDetail<any>",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the value has changed.",
      "docsTags": []
    },
    {
      "event": "ionDismiss",
      "detail": "void",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the overlay is dismissed.",
      "docsTags": []
    },
    {
      "event": "ionFocus",
      "detail": "void",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the select has focus.",
      "docsTags": []
    }
  ],
  "listeners": [],
  "styles": [
    {
      "name": "--padding-bottom",
      "annotation": "prop",
      "docs": "Bottom padding of the select"
    },
    {
      "name": "--padding-end",
      "annotation": "prop",
      "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select"
    },
    {
      "name": "--padding-start",
      "annotation": "prop",
      "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select"
    },
    {
      "name": "--padding-top",
      "annotation": "prop",
      "docs": "Top padding of the select"
    },
    {
      "name": "--placeholder-color",
      "annotation": "prop",
      "docs": "Color of the select placeholder text"
    },
    {
      "name": "--placeholder-opacity",
      "annotation": "prop",
      "docs": "Opacity of the select placeholder text"
    }
  ],
  "slots": [],
  "parts": [
    {
      "name": "icon",
      "docs": "The select icon container."
    },
    {
      "name": "placeholder",
      "docs": "The text displayed in the select when there is no value."
    },
    {
      "name": "text",
      "docs": "The displayed value of the select."
    }
  ],
  "dependents": [],
  "dependencies": [
    "ion-select-popover",
    "ion-popover",
    "ion-action-sheet",
    "ion-alert"
  ],
  "dependencyGraph": {
    "ion-select": [
      "ion-select-popover",
      "ion-popover",
      "ion-action-sheet",
      "ion-alert"
    ],
    "ion-select-popover": [
      "ion-item",
      "ion-checkbox",
      "ion-label",
      "ion-radio-group",
      "ion-radio",
      "ion-list",
      "ion-list-header"
    ],
    "ion-item": [
      "ion-icon",
      "ion-ripple-effect",
      "ion-note"
    ],
    "ion-popover": [
      "ion-backdrop"
    ],
    "ion-action-sheet": [
      "ion-backdrop",
      "ion-icon",
      "ion-ripple-effect"
    ],
    "ion-alert": [
      "ion-ripple-effect",
      "ion-backdrop"
    ]
  }
}