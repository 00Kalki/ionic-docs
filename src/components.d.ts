/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  Link,
} from './definitions';


export namespace Components {

  interface DocsCode {
    'language': string;
  }
  interface DocsCodeAttributes extends StencilHTMLAttributes {
    'language'?: string;
  }

  interface DocsDocument {
    'path': string;
  }
  interface DocsDocumentAttributes extends StencilHTMLAttributes {
    'path'?: string;
  }

  interface DocsMenu {}
  interface DocsMenuAttributes extends StencilHTMLAttributes {}

  interface DocsRoot {}
  interface DocsRootAttributes extends StencilHTMLAttributes {}

  interface DocsTableOfContents {
    'label': string;
    'links': Link[];
  }
  interface DocsTableOfContentsAttributes extends StencilHTMLAttributes {
    'label'?: string;
    'links'?: Link[];
  }
}

declare global {
  interface StencilElementInterfaces {
    'DocsCode': Components.DocsCode;
    'DocsDocument': Components.DocsDocument;
    'DocsMenu': Components.DocsMenu;
    'DocsRoot': Components.DocsRoot;
    'DocsTableOfContents': Components.DocsTableOfContents;
  }

  interface StencilIntrinsicElements {
    'docs-code': Components.DocsCodeAttributes;
    'docs-document': Components.DocsDocumentAttributes;
    'docs-menu': Components.DocsMenuAttributes;
    'docs-root': Components.DocsRootAttributes;
    'docs-table-of-contents': Components.DocsTableOfContentsAttributes;
  }


  interface HTMLDocsCodeElement extends Components.DocsCode, HTMLStencilElement {}
  var HTMLDocsCodeElement: {
    prototype: HTMLDocsCodeElement;
    new (): HTMLDocsCodeElement;
  };

  interface HTMLDocsDocumentElement extends Components.DocsDocument, HTMLStencilElement {}
  var HTMLDocsDocumentElement: {
    prototype: HTMLDocsDocumentElement;
    new (): HTMLDocsDocumentElement;
  };

  interface HTMLDocsMenuElement extends Components.DocsMenu, HTMLStencilElement {}
  var HTMLDocsMenuElement: {
    prototype: HTMLDocsMenuElement;
    new (): HTMLDocsMenuElement;
  };

  interface HTMLDocsRootElement extends Components.DocsRoot, HTMLStencilElement {}
  var HTMLDocsRootElement: {
    prototype: HTMLDocsRootElement;
    new (): HTMLDocsRootElement;
  };

  interface HTMLDocsTableOfContentsElement extends Components.DocsTableOfContents, HTMLStencilElement {}
  var HTMLDocsTableOfContentsElement: {
    prototype: HTMLDocsTableOfContentsElement;
    new (): HTMLDocsTableOfContentsElement;
  };

  interface HTMLElementTagNameMap {
    'docs-code': HTMLDocsCodeElement
    'docs-document': HTMLDocsDocumentElement
    'docs-menu': HTMLDocsMenuElement
    'docs-root': HTMLDocsRootElement
    'docs-table-of-contents': HTMLDocsTableOfContentsElement
  }

  interface ElementTagNameMap {
    'docs-code': HTMLDocsCodeElement;
    'docs-document': HTMLDocsDocumentElement;
    'docs-menu': HTMLDocsMenuElement;
    'docs-root': HTMLDocsRootElement;
    'docs-table-of-contents': HTMLDocsTableOfContentsElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
