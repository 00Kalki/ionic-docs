(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[40415],{65430:function(e,n,o){"use strict";o.r(n),o.d(n,{frontMatter:function(){return a},metadata:function(){return l},toc:function(){return s},default:function(){return d}});var t=o(22122),i=o(19756),r=(o(67294),o(3905)),a={},l={unversionedId:"troubleshooting/native",id:"troubleshooting/native",isDocsHomePage:!1,title:"Native Errors",description:"Code Signing errors",source:"@site/docs/troubleshooting/native.md",sourceDirName:"troubleshooting",slug:"/troubleshooting/native",permalink:"/docs/troubleshooting/native",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/troubleshooting/native.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Runtime Issues",permalink:"/docs/troubleshooting/runtime"},next:{title:"CORS Errors",permalink:"/docs/troubleshooting/cors"}},s=[{value:"Code Signing errors",id:"code-signing-errors",children:[]},{value:"Xcode build error 65",id:"xcode-build-error-65",children:[]},{value:"Clashing Google Play Services versions",id:"clashing-google-play-services-versions",children:[]}],p={toc:s};function d(e){var n=e.components,a=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"code-signing-errors"},"Code Signing errors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"Code Signing Error: Failed to create provisioning profile. The app ID \"com.csform.ionic.yellow\" cannot be registered to your development team. Change your bundle identifier to a unique string to try again. Code Signing Error: No profiles for 'com.csform.ionic.yellow' were found: Xcode couldn't find any iOS App Development provisioning profiles matching 'com.csform.ionic.yellow'. Code Signing Error: Code signing is required for product type 'Application' in SDK 'iOS 11.1'\n")),(0,r.kt)("p",null,"Running an app on an iOS device requires a provisioning profile. If a provisioning profile has not been created yet follow these directions:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",null,"Set the [Package ID](/docs/reference/glossary#package-id)."),(0,r.kt)("p",{parentName:"li"},"For Capacitor, open the ",(0,r.kt)("inlineCode",{parentName:"p"},"capacitor.config.json")," file and modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"appId")," property."),(0,r.kt)("p",{parentName:"li"},"For Cordova, open the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.xml")," file and modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," attribute of the root element, ",(0,r.kt)("inlineCode",{parentName:"p"},"<widget>"),". See ",(0,r.kt)("a",{parentName:"p",href:"https://cordova.apache.org/docs/en/latest/config_ref/#widget"},"the Cordova documentation")," for more information.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",null,"Open the project in ",(0,r.kt)("b",null,"Xcode"),"."),(0,r.kt)("p",{parentName:"li"},"For Capacitor, run the following to open the app in Xcode:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic capacitor open ios\n")),(0,r.kt)("p",{parentName:"li"},"For Cordova, open Xcode. Use ",(0,r.kt)("strong",{parentName:"p"},"File")," ","\xbb"," ",(0,r.kt)("strong",{parentName:"p"},"Open")," and locate the app. Open the app's ",(0,r.kt)("inlineCode",{parentName:"p"},"platforms/ios")," directory.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",null,"In ",(0,r.kt)("b",null,"Project navigator"),", select the project root to open the project editor. Under the **Identity** section, verify that the Package ID that was set matches the Bundle Identifier."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Xcode Identity Setup",src:o(36641).Z}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",null,"In the same project editor, under the ",(0,r.kt)("b",null,"Signing")," section, ensure ",(0,r.kt)("b",null,"Automatically manage signing")," is enabled.")," Then, select a Development Team. Given a Development Team, Xcode will attempt to automatically prepare provisioning and signing.",(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Xcode Signing Setup",src:o(45465).Z})))),(0,r.kt)("h2",{id:"xcode-build-error-65"},"Xcode build error 65"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"Error: Error code 65 for command: xcodebuild with args: -xcconfig,/Users/ionitron/projects/my-project/platforms/ios/cordova/build-debug.xcconfig,-workspace,SC project.xcworkspace,-scheme,SC project,-configuration,Debug,-sdk,iphonesimulator,-destination,platform=iOS Simulator,name=iPhone X,build,CONFIGURATION_BUILD_DIR=/Users/ionitron/projects/my-project/platforms/ios/build/emulator,SHARED_PRECOMPS_DIR=/Users/ionitron/projects/my-project/platforms/ios/build/sharedpch\n")),(0,r.kt)("p",null,"This error is an error code from Xcode that can be caused by provisioning issues or outdated cordova dependencies. To fix this error first make sure a provisioning profile has been generated using the above instructions and then try to ",(0,r.kt)("a",{parentName:"p",href:"/docs/developing/ios#running-with-xcode"},"run the app from Xcode"),"."),(0,r.kt)("p",null,"If this does not fix the error then run the following commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"rm -rf node_modules\nrm -rf platform\nnpm i\nionic cordova platform add ios\nionic cordova prepare ios\nionic cordova build ios --prod\n")),(0,r.kt)("p",null,"Once these commands have been ran a fresh build can be done."),(0,r.kt)("h2",{id:"clashing-google-play-services-versions"},"Clashing Google Play Services versions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"Error: more than one library with package name com.google.android.gms\n")),(0,r.kt)("p",null,"This error is caused by two separate plugins trying to use different versions of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Google Play Services"),". To fix this issue make sure you are running ",(0,r.kt)("inlineCode",{parentName:"p"},"cordova")," version ",(0,r.kt)("inlineCode",{parentName:"p"},"7.1.0")," or higher and ",(0,r.kt)("inlineCode",{parentName:"p"},"cordova-android")," ",(0,r.kt)("inlineCode",{parentName:"p"},"6.3.0")," or higher. To install latest ",(0,r.kt)("inlineCode",{parentName:"p"},"cordova")," run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ npm install cordova@latest\n")),(0,r.kt)("p",null,"and to update ",(0,r.kt)("inlineCode",{parentName:"p"},"cordova-android")," run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ cordova platform update android\n")),(0,r.kt)("p",null,"Plugins that depend on ",(0,r.kt)("inlineCode",{parentName:"p"},"Google Play Services")," can now be updated to use the same version. For example, if ",(0,r.kt)("inlineCode",{parentName:"p"},"pluginA")," uses version 11.0 and ",(0,r.kt)("inlineCode",{parentName:"p"},"pluginB")," uses version 15.0 they can be updated to use the same version with the following snippet in the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.xml")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<plugin name="pluginA" spec="npm">\n  <variable name="PLAY_SERVICES_VERSION" value="15.0.0"/>\n</plugin>\n<plugin name="pluginB" spec="npm">\n  <variable name="PLAY_SERVICES_VERSION" value="15.0.0" />\n</plugin>\n')))}d.isMDXComponent=!0},36641:function(e,n,o){"use strict";n.Z=o.p+"assets/images/ios-xcode-identity-setup-810a91fa449112c7a3bc48e62d2ceb9b.png"},45465:function(e,n,o){"use strict";n.Z=o.p+"assets/images/ios-xcode-signing-setup-9a189ccd440dedd98b3d54a19eb5e68c.png"}}]);