(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[72626],{19207:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var a=r(22122),n=r(19756),o=(r(67294),r(3905)),l=r(41395),i=r(58215),s={title:"ion-progress-bar",demoUrl:"/docs/demos/api/progress-bar/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/progress-bar/index.html"},p={unversionedId:"api/progress-bar",id:"api/progress-bar",isDocsHomePage:!1,title:"ion-progress-bar",description:"Progress bars inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates. There are two types of progress bars: determinate and indeterminate.",source:"@site/docs/api/progress-bar.md",sourceDirName:"api",slug:"/api/progress-bar",permalink:"/docs/api/progress-bar",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/api/progress-bar.md",version:"current",frontMatter:{title:"ion-progress-bar",demoUrl:"/docs/demos/api/progress-bar/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/progress-bar/index.html"},sidebar:"api",previous:{title:"ion-loading",permalink:"/docs/api/loading"},next:{title:"ion-skeleton-text",permalink:"/docs/api/skeleton-text"}},d=[{value:"Progress Type",id:"progress-type",children:[{value:"Determinate",id:"determinate",children:[]},{value:"Indeterminate",id:"indeterminate",children:[]}]},{value:"Usage",id:"usage",children:[]},{value:"Properties",id:"properties",children:[{value:"buffer",id:"buffer",children:[]},{value:"color",id:"color",children:[]},{value:"mode",id:"mode",children:[]},{value:"reversed",id:"reversed",children:[]},{value:"type",id:"type",children:[]},{value:"value",id:"value",children:[]}]},{value:"CSS Shadow Parts",id:"css-shadow-parts",children:[]},{value:"CSS Custom Properties",id:"css-custom-properties",children:[]}],m={toc:d};function u(e){var t=e.components,r=(0,n.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Progress bars inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates. There are two types of progress bars: ",(0,o.kt)("inlineCode",{parentName:"p"},"determinate")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"indeterminate"),"."),(0,o.kt)("h2",{id:"progress-type"},"Progress Type"),(0,o.kt)("h3",{id:"determinate"},"Determinate"),(0,o.kt)("p",null,"Determinate is the default type. It should be used when the percentage of an operation is known. The progress is represented by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," property. This can be used to show the progress increasing from 0 to 100% of the track."),(0,o.kt)("p",null,"If the ",(0,o.kt)("inlineCode",{parentName:"p"},"buffer")," property is set, a buffer stream will show with animated circles to indicate activity. The value of the ",(0,o.kt)("inlineCode",{parentName:"p"},"buffer")," property will also be represented by how much visible track there is. If the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"buffer")," is less than the ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," property, there will be no visible track. If ",(0,o.kt)("inlineCode",{parentName:"p"},"buffer")," is equal to ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," then the buffer stream will be hidden."),(0,o.kt)("h3",{id:"indeterminate"},"Indeterminate"),(0,o.kt)("p",null,"The indeterminate type should be used when it is unknown how long the process will take. The progress bar is not tied to the ",(0,o.kt)("inlineCode",{parentName:"p"},"value"),", instead it continually slides along the track until the process is complete."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)(l.Z,{defaultValue:"angular",values:[{value:"angular",label:"ANGULAR"},{value:"javascript",label:"JAVASCRIPT"},{value:"react",label:"REACT"},{value:"stencil",label:"STENCIL"},{value:"vue",label:"VUE"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"angular",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Default Progressbar --\x3e\n<ion-progress-bar></ion-progress-bar>\n\n\x3c!-- Default Progressbar with 50 percent --\x3e\n<ion-progress-bar value="0.5"></ion-progress-bar>\n\n\x3c!-- Colorize Progressbar --\x3e\n<ion-progress-bar color="primary" value="0.5"></ion-progress-bar>\n<ion-progress-bar color="secondary" value="0.5"></ion-progress-bar>\n\n\x3c!-- Other types --\x3e\n<ion-progress-bar value="0.25" buffer="0.5"></ion-progress-bar>\n<ion-progress-bar type="indeterminate"></ion-progress-bar>\n<ion-progress-bar type="indeterminate" reversed="true"></ion-progress-bar>\n'))),(0,o.kt)(i.Z,{value:"javascript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Default Progressbar --\x3e\n<ion-progress-bar></ion-progress-bar>\n\n\x3c!-- Default Progressbar with 50 percent --\x3e\n<ion-progress-bar value="0.5"></ion-progress-bar>\n\n\x3c!-- Colorize Progressbar --\x3e\n<ion-progress-bar color="primary" value="0.5"></ion-progress-bar>\n<ion-progress-bar color="secondary" value="0.5"></ion-progress-bar>\n\n\x3c!-- Other types --\x3e\n<ion-progress-bar value="0.25" buffer="0.5"></ion-progress-bar>\n<ion-progress-bar type="indeterminate"></ion-progress-bar>\n<ion-progress-bar type="indeterminate" reversed="true"></ion-progress-bar>\n'))),(0,o.kt)(i.Z,{value:"react",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from \'react\';\nimport { IonProgressBar, IonContent } from \'@ionic/react\';\n\nexport const ProgressbarExample: React.FC = () => (\n  <IonContent>\n    {/*-- Default Progressbar --*/}\n    <IonProgressBar></IonProgressBar><br />\n\n    {/*-- Default Progressbar with 50 percent --*/}\n    <IonProgressBar value={0.5}></IonProgressBar><br />\n\n    {/*-- Colorize Progressbar --*/}\n    <IonProgressBar color="primary" value={0.5}></IonProgressBar><br />\n    <IonProgressBar color="secondary" value={0.5}></IonProgressBar><br />\n\n    {/*-- Other types --*/}\n    <IonProgressBar value={0.25} buffer={0.5}></IonProgressBar><br />\n    <IonProgressBar type="indeterminate"></IonProgressBar><br />\n    <IonProgressBar type="indeterminate" reversed={true}></IonProgressBar><br />\n  </IonContent>\n);\n'))),(0,o.kt)(i.Z,{value:"stencil",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Component, h } from \'@stencil/core\';\n\n@Component({\n  tag: \'progress-bar-example\',\n  styleUrl: \'progress-bar-example.css\'\n})\nexport class ProgressBarExample {\n  render() {\n    return [\n      // Default Progressbar\n      <ion-progress-bar></ion-progress-bar>,\n\n      // Default Progressbar with 50 percent\n      <ion-progress-bar value={0.5}></ion-progress-bar>,\n\n      // Colorize Progressbar\n      <ion-progress-bar color="primary" value={0.5}></ion-progress-bar>,\n      <ion-progress-bar color="secondary" value={0.5}></ion-progress-bar>,\n\n      // Other types\n      <ion-progress-bar value={0.25} buffer={0.5}></ion-progress-bar>,\n      <ion-progress-bar type="indeterminate"></ion-progress-bar>,\n      <ion-progress-bar type="indeterminate" reversed={true}></ion-progress-bar>\n    ];\n  }\n}\n'))),(0,o.kt)(i.Z,{value:"vue",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  \x3c!-- Default Progressbar --\x3e\n  <ion-progress-bar></ion-progress-bar>\n\n  \x3c!-- Default Progressbar with 50 percent --\x3e\n  <ion-progress-bar value="0.5"></ion-progress-bar>\n\n  \x3c!-- Colorize Progressbar --\x3e\n  <ion-progress-bar color="primary" value="0.5"></ion-progress-bar>\n  <ion-progress-bar color="secondary" value="0.5"></ion-progress-bar>\n\n  \x3c!-- Other types --\x3e\n  <ion-progress-bar value="0.25" buffer="0.5"></ion-progress-bar>\n  <ion-progress-bar type="indeterminate"></ion-progress-bar>\n  <ion-progress-bar type="indeterminate" reversed="true"></ion-progress-bar>\n</template>\n\n<script>\nimport { IonProgressBar } from \'@ionic/vue\';\nimport { defineComponent } from \'vue\';\n\nexport default defineComponent({\n  components: { IonProgressBar }\n});\n<\/script>\n')))),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"buffer"},"buffer"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"If the buffer and value are smaller than 1, the buffer circles will show.",(0,o.kt)("br",null),"The buffer should be between ","[0, 1]",".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"buffer"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"number"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1"))))),(0,o.kt)("h3",{id:"color"},"color"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"The color to use from your application's color palette.",(0,o.kt)("br",null),"Default options are: ",(0,o.kt)("inlineCode",{parentName:"td"},'"primary"'),", ",(0,o.kt)("inlineCode",{parentName:"td"},'"secondary"'),", ",(0,o.kt)("inlineCode",{parentName:"td"},'"tertiary"'),", ",(0,o.kt)("inlineCode",{parentName:"td"},'"success"'),", ",(0,o.kt)("inlineCode",{parentName:"td"},'"warning"'),", ",(0,o.kt)("inlineCode",{parentName:"td"},'"danger"'),", ",(0,o.kt)("inlineCode",{parentName:"td"},'"light"'),", ",(0,o.kt)("inlineCode",{parentName:"td"},'"medium"'),", and ",(0,o.kt)("inlineCode",{parentName:"td"},'"dark"'),".",(0,o.kt)("br",null),"For more information on colors, see ",(0,o.kt)("a",{parentName:"td",href:"/docs/theming/basics"},"theming"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"color"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"string \\| undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"mode"},"mode"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"The mode determines which platform styles to use.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"mode"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},'"ios" \\| "md"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"reversed"},"reversed"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"If true, reverse the progress bar direction.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"reversed"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"false"))))),(0,o.kt)("h3",{id:"type"},"type"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"The state of the progress bar, based on if the time the process takes is known or not.",(0,o.kt)("br",null),"Default options are: ",(0,o.kt)("inlineCode",{parentName:"td"},'"determinate"')," (no animation), ",(0,o.kt)("inlineCode",{parentName:"td"},'"indeterminate"')," (animate from left to right).")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"type"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},'"determinate" \\| "indeterminate"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'determinate'"))))),(0,o.kt)("h3",{id:"value"},"value"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"The value determines how much of the active bar should display when the",(0,o.kt)("br",null),(0,o.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,o.kt)("inlineCode",{parentName:"td"},'"determinate"'),".",(0,o.kt)("br",null),"The value should be between ","[0, 1]",".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"value"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"number"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0"))))),(0,o.kt)("h2",{id:"css-shadow-parts"},"CSS Shadow Parts"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"progress")),(0,o.kt)("td",{parentName:"tr",align:null},"The progress bar that shows the current value when ",(0,o.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,o.kt)("inlineCode",{parentName:"td"},'"determinate"')," and slides back and forth when ",(0,o.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,o.kt)("inlineCode",{parentName:"td"},'"indeterminate"'),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"stream")),(0,o.kt)("td",{parentName:"tr",align:null},"The animated circles that appear while buffering. This only shows when ",(0,o.kt)("inlineCode",{parentName:"td"},"buffer")," is set and ",(0,o.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,o.kt)("inlineCode",{parentName:"td"},'"determinate"'),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"track")),(0,o.kt)("td",{parentName:"tr",align:null},"The track bar behind the progress bar. If the ",(0,o.kt)("inlineCode",{parentName:"td"},"buffer")," property is set and ",(0,o.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,o.kt)("inlineCode",{parentName:"td"},'"determinate"')," the track will be the")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"width of the ",(0,o.kt)("inlineCode",{parentName:"td"},"buffer")," value."),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("h2",{id:"css-custom-properties"},"CSS Custom Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--background")),(0,o.kt)("td",{parentName:"tr",align:null},"Background of the progress track, or the buffer bar if ",(0,o.kt)("inlineCode",{parentName:"td"},"buffer")," is set")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--buffer-background")),(0,o.kt)("td",{parentName:"tr",align:null},"DEPRECATED, use ",(0,o.kt)("inlineCode",{parentName:"td"},"--background")," instead")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--progress-background")),(0,o.kt)("td",{parentName:"tr",align:null},"Background of the progress bar representing the current value")))))}u.isMDXComponent=!0}}]);