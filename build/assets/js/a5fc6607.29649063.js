(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[59665],{38958:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return v},frontMatter:function(){return g},metadata:function(){return b},toc:function(){return k}});var a=o(22122),r=o(19756),n=o(67294),s=o(3905),i=o(86010),l="colorAccordion_tdfp",c="colorSubmenu_1sTA",d="colorMenuItem_tzpl",m="colorMenuText_2Y6h",h="colorSubmenuItem_2M_-",p="colorMenuValue_2YVo",u="colorMenuItemActive_FIjm";function f(e){var t,o=Object.assign({},e),r=(0,n.useState)([]),s=r[0],f=r[1],g=(0,n.useState)(""),b=g[0],k=g[1],S=(0,n.useRef)(null);(0,n.useEffect)((function(){f(["primary","secondary","tertiary","success","warning","danger","dark","medium","light"])}),[]);var v=(0,n.useCallback)((function(e){return{baseColor:getComputedStyle(S.current).getPropertyValue("--ion-color-"+e),shadeColor:getComputedStyle(S.current).getPropertyValue("--ion-color-"+e+"-shade"),tintColor:getComputedStyle(S.current).getPropertyValue("--ion-color-"+e+"-tint")}}),[]);return n.createElement("ul",(0,a.Z)({},o,{ref:S,className:(0,i.Z)((t={},t[l]=!0,t[o.className]=Boolean(o.className),t["color-accordion"]=!0,t))}),s.map((function(e){var t,o=v(e),a=o.baseColor,r=o.shadeColor,s=o.tintColor;return n.createElement("li",{className:(0,i.Z)((t={},t[d]=!0,t[u]=e===b,t)),style:{"background-color":"var(--ion-color-"+e+")",color:"var(--ion-color-"+e+"-contrast)"}},n.createElement("div",{className:m,onClick:function(){return k(b===e?"":e)}},e[0].toUpperCase()+e.substr(1),n.createElement("div",{className:p},a)),n.createElement("svg",{width:"10px",height:"6px",viewBox:"0 0 10 6",version:"1.1",xmlns:"http://www.w3.org/2000/svg"},n.createElement("g",{id:"Welcome",stroke:"none","stroke-width":"1",fill:"none","fill-rule":"evenodd","stroke-linecap":"round","stroke-linejoin":"round"},n.createElement("g",{id:"Desktop-HD",transform:"translate(-1025.000000, -335.000000)",stroke:"currentColor","stroke-width":"2"},n.createElement("polyline",{id:"arrow",transform:"translate(1030.000000, 338.000000) rotate(90.000000) translate(-1030.000000, -338.000000) ",points:"1028 334 1032 338.020022 1028 342"})))),n.createElement("ul",{className:c},n.createElement("li",{className:h,style:{"background-color":"var(--ion-color-"+e+"-shade)",color:"var(--ion-color-"+e+"-contrast)"}},n.createElement("div",{className:m},"Shade",n.createElement("div",{className:p},r))),n.createElement("li",{className:h,style:{"background-color":"var(--ion-color-"+e+"-tint)",color:"var(--ion-color-"+e+"-contrast)"}},n.createElement("div",{className:m},"Tint",n.createElement("div",{className:p},s)))))})))}var g={sidebar_label:"Basics"},b={unversionedId:"theming/basics",id:"theming/basics",isDocsHomePage:!1,title:"Theming Basics",description:"Ionic Framework is built to be a blank slate that can easily be customized and modified to fit a brand, while still following the standards of the different platforms. Theming Ionic apps is now easier than ever. Because the framework is built with CSS, it comes with pre-baked default styles which are extremely easy to change and modify.",source:"@site/docs/theming/basics.md",sourceDirName:"theming",slug:"/theming/basics",permalink:"/docs/theming/basics",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/theming/basics.md",version:"current",sidebar_label:"Basics",frontMatter:{sidebar_label:"Basics"},sidebar:"docs",previous:{title:"CSS Utilities",permalink:"/docs/layout/css-utilities"},next:{title:"Platform Styles",permalink:"/docs/theming/platform-styles"}},k=[{value:"Colors",id:"colors",children:[]},{value:"Platform Standards",id:"platform-standards",children:[]},{value:"CSS Variables",id:"css-variables",children:[]},{value:"CSS Shadow Parts",id:"css-shadow-parts",children:[]},{value:"Branding",id:"branding",children:[]}],S={toc:k};function v(e){var t=e.components,o=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,a.Z)({},S,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Ionic Framework is built to be a blank slate that can easily be customized and modified to fit a brand, while still following the standards of the different platforms. Theming Ionic apps is now easier than ever. Because the framework is built with CSS, it comes with pre-baked default styles which are extremely easy to change and modify."),(0,s.kt)("h2",{id:"colors"},"Colors"),(0,s.kt)("p",null,"Ionic has nine default colors that can be used to change the color of many components. Each color is actually a collection of multiple properties, including a ",(0,s.kt)("inlineCode",{parentName:"p"},"shade")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"tint"),", used throughout Ionic."),(0,s.kt)("p",null,"When changing a color, it is important to set all of the related properties. This can be done easily with the ",(0,s.kt)("a",{parentName:"p",href:"/docs/theming/color-generator"},"Color Generator")," tool, but these can also be manually written if desired. For more information on Ionic colors, see ",(0,s.kt)("a",{parentName:"p",href:"/docs/theming/colors"},"Colors"),"."),(0,s.kt)(f,{mdxType:"ColorAccordion"}),(0,s.kt)("h2",{id:"platform-standards"},"Platform Standards"),(0,s.kt)("p",null,"Ionic components adapt their look and behavior based on the platform the app is running on. We call this ",(0,s.kt)("strong",null,"Adaptive Styling"),'. This allows developers to build apps that use the same codebase for multiple platforms, while still looking "native" to those particular platforms.'),(0,s.kt)("p",null,"Ionic has two ",(0,s.kt)("strong",{parentName:"p"},"modes")," that are used to customize the look of components based on the ",(0,s.kt)("strong",{parentName:"p"},"platform"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"ios")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"md"),". Each platform has a default mode, but this can easily be configured. For more information on customizing an application based on the platform, see ",(0,s.kt)("a",{parentName:"p",href:"/docs/theming/platform-styles"},"Platform Styles"),"."),(0,s.kt)("h2",{id:"css-variables"},"CSS Variables"),(0,s.kt)("p",null,"The Ionic Framework components are themed using ",(0,s.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables",target:"_blank",rel:"noopener noreferrer"},"CSS properties (variables)"),". CSS variables add dynamic values to an otherwise static language. This is something that has traditionally required a CSS preprocessor like Sass. The look of an application can easily be changed by changing the value of any of the ",(0,s.kt)("a",{parentName:"p",href:"/docs/theming/css-variables"},"CSS Variables")," Ionic Framework provides."),(0,s.kt)("h2",{id:"css-shadow-parts"},"CSS Shadow Parts"),(0,s.kt)("p",null,"CSS Shadow Parts were added to make it easier to fully customize Ionic Framework Shadow components. In the past, components that use ",(0,s.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM",target:"_blank",rel:"noopener noreferrer"},"Shadow DOM")," were unable to have elements inside of their shadow tree styled directly. With the addition of Shadow parts, there is no longer a need for CSS variables for every property on an inner element of a Shadow component. For more information on customizing Ionic Framework components using parts, see the ",(0,s.kt)("a",{parentName:"p",href:"/docs/theming/css-shadow-parts"},"CSS Shadow Parts")," guide."),(0,s.kt)("h2",{id:"branding"},"Branding"),(0,s.kt)("p",null,"Ionic provides application colors that can be used to theme an application to match a brand or color scheme. The default theme uses a light background, but everything from the background color to the text color is fully customizable. For more information on branding, see ",(0,s.kt)("a",{parentName:"p",href:"/docs/theming/themes"},"Themes"),"."))}v.isMDXComponent=!0}}]);