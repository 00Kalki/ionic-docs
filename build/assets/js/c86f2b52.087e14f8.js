(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[27998],{59730:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return r},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var p=t(22122),a=t(19756),i=(t(67294),t(3905)),l=t(41395),o=t(58215),r={title:"ion-ripple-effect"},d={unversionedId:"api/ripple-effect",id:"api/ripple-effect",isDocsHomePage:!1,title:"ion-ripple-effect",description:"The ripple effect component adds the Material Design ink ripple interaction effect. This component can only be used inside of an `` and can be added to any component.",source:"@site/docs/api/ripple-effect.md",sourceDirName:"api",slug:"/api/ripple-effect",permalink:"/docs/api/ripple-effect",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/api/ripple-effect.md",version:"current",frontMatter:{title:"ion-ripple-effect"},sidebar:"api",previous:{title:"ion-button",permalink:"/docs/api/button"},next:{title:"ion-card",permalink:"/docs/api/card"}},c=[{value:"Usage",id:"usage",children:[]},{value:"Properties",id:"properties",children:[{value:"type",id:"type",children:[]}]},{value:"Methods",id:"methods",children:[{value:"addRipple",id:"addripple",children:[]}]}],f={toc:c};function u(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,p.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ripple effect component adds the ",(0,i.kt)("a",{parentName:"p",href:"https://material.io/develop/web/components/ripples/"},"Material Design ink ripple interaction effect"),". This component can only be used inside of an ",(0,i.kt)("inlineCode",{parentName:"p"},"<ion-app>")," and can be added to any component."),(0,i.kt)("p",null,"It's important to note that the parent should have ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/position"},"relative positioning")," because the ripple effect is absolutely positioned and will cover the closest parent with relative positioning. The parent element should also be given the ",(0,i.kt)("inlineCode",{parentName:"p"},"ion-activatable")," class, which tells the ripple effect that the element is clickable."),(0,i.kt)("p",null,"The default type, ",(0,i.kt)("inlineCode",{parentName:"p"},'"bounded"'),", will expand the ripple effect from the click position outwards. To add a ripple effect that always starts in the center of the element and expands in a circle, add an ",(0,i.kt)("inlineCode",{parentName:"p"},'"unbounded"')," type. It's recommended to add ",(0,i.kt)("inlineCode",{parentName:"p"},"overflow: hidden")," to the parent element to avoid the ripple overflowing its container, especially with an unbounded ripple."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)(l.Z,{defaultValue:"angular",values:[{value:"angular",label:"ANGULAR"},{value:"javascript",label:"JAVASCRIPT"},{value:"react",label:"REACT"},{value:"stencil",label:"STENCIL"},{value:"vue",label:"VUE"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"angular",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<ion-app>\n  <ion-content>\n    <div class="ion-activatable ripple-parent">\n      A plain div with a bounded ripple effect\n      <ion-ripple-effect></ion-ripple-effect>\n    </div>\n\n    <button class="ion-activatable ripple-parent">\n      A button with a bounded ripple effect\n      <ion-ripple-effect></ion-ripple-effect>\n    </button>\n\n    <div class="ion-activatable ripple-parent">\n      A plain div with an unbounded ripple effect\n      <ion-ripple-effect type="unbounded"></ion-ripple-effect>\n    </div>\n\n    <button class="ion-activatable ripple-parent">\n      A button with an unbounded ripple effect\n      <ion-ripple-effect type="unbounded"></ion-ripple-effect>\n    </button>\n  </ion-content>\n</ion-app>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".ripple-parent {\n  position: relative;\n  overflow: hidden;\n}\n"))),(0,i.kt)(o.Z,{value:"javascript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<ion-app>\n  <ion-content>\n    <div class="ion-activatable ripple-parent">\n      A plain div with a bounded ripple effect\n      <ion-ripple-effect></ion-ripple-effect>\n    </div>\n\n    <button class="ion-activatable ripple-parent">\n      A button with a bounded ripple effect\n      <ion-ripple-effect></ion-ripple-effect>\n    </button>\n\n    <div class="ion-activatable ripple-parent">\n      A plain div with an unbounded ripple effect\n      <ion-ripple-effect type="unbounded"></ion-ripple-effect>\n    </div>\n\n    <button class="ion-activatable ripple-parent">\n      A button with an unbounded ripple effect\n      <ion-ripple-effect type="unbounded"></ion-ripple-effect>\n    </button>\n  </ion-content>\n</ion-app>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".ripple-parent {\n  position: relative;\n  overflow: hidden;\n}\n"))),(0,i.kt)(o.Z,{value:"react",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from \'react\';\nimport { IonApp, IonContent, IonRippleEffect } from \'@ionic/react\';\nimport \'./RippleEffectExample.css\';\n\nexport const RippleExample: React.FC = () => (\n  <IonApp>\n   <IonContent>\n      <div className="ion-activatable ripple-parent">\n        A plain div with a bounded ripple effect\n        <IonRippleEffect></IonRippleEffect>\n      </div>\n\n      <button className="ion-activatable ripple-parent">\n        A button with a bounded ripple effect\n        <IonRippleEffect></IonRippleEffect>\n      </button>\n\n      <div className="ion-activatable ripple-parent">\n        A plain div with an unbounded ripple effect\n        <IonRippleEffect type="unbounded"></IonRippleEffect>\n      </div>\n\n      <button className="ion-activatable ripple-parent">\n        A button with an unbounded ripple effect\n        <IonRippleEffect type="unbounded"></IonRippleEffect>\n      </button>\n    </IonContent>\n  </IonApp>\n);\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".ripple-parent {\n  position: relative;\n  overflow: hidden;\n}\n"))),(0,i.kt)(o.Z,{value:"stencil",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Component, h } from \'@stencil/core\';\n\n@Component({\n  tag: \'ripple-effect-example\',\n  styleUrl: \'ripple-effect-example.css\'\n})\nexport class RippleEffectExample {\n  render() {\n    return [\n      <ion-app>\n        <ion-content>\n          <div class="ion-activatable ripple-parent">\n            A plain div with a bounded ripple effect\n            <ion-ripple-effect></ion-ripple-effect>\n          </div>\n\n          <button class="ion-activatable ripple-parent">\n            A button with a bounded ripple effect\n            <ion-ripple-effect></ion-ripple-effect>\n          </button>\n\n          <div class="ion-activatable ripple-parent">\n            A plain div with an unbounded ripple effect\n            <ion-ripple-effect type="unbounded"></ion-ripple-effect>\n          </div>\n\n          <button class="ion-activatable ripple-parent">\n            A button with an unbounded ripple effect\n            <ion-ripple-effect type="unbounded"></ion-ripple-effect>\n          </button>\n        </ion-content>\n      </ion-app>\n    ];\n  }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".ripple-parent {\n  position: relative;\n  overflow: hidden;\n}\n"))),(0,i.kt)(o.Z,{value:"vue",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <ion-app>\n    <ion-content>\n      <div class="ion-activatable ripple-parent">\n        A plain div with a bounded ripple effect\n        <ion-ripple-effect></ion-ripple-effect>\n      </div>\n\n      <button class="ion-activatable ripple-parent">\n        A button with a bounded ripple effect\n        <ion-ripple-effect></ion-ripple-effect>\n      </button>\n\n      <div class="ion-activatable ripple-parent">\n        A plain div with an unbounded ripple effect\n        <ion-ripple-effect type="unbounded"></ion-ripple-effect>\n      </div>\n\n      <button class="ion-activatable ripple-parent">\n        A button with an unbounded ripple effect\n        <ion-ripple-effect type="unbounded"></ion-ripple-effect>\n      </button>\n    </ion-content>\n  </ion-app>\n</template>\n\n<style>\n  .ripple-parent {\n    position: relative;\n    overflow: hidden;\n  }\n</style>\n\n<script>\nimport { IonApp, IonContent, IonRippleEffect } from \'@ionic/vue\';\nimport { defineComponent } from \'vue\';\n\nexport default defineComponent({\n  components: { IonApp, IonContent, IonRippleEffect }\n});\n<\/script>\n')))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"type"},"type"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Description")),(0,i.kt)("td",{parentName:"tr",align:null},"Sets the type of ripple-effect:",(0,i.kt)("br",null),(0,i.kt)("br",null),"- ",(0,i.kt)("inlineCode",{parentName:"td"},"bounded"),": the ripple effect expands from the user's click position",(0,i.kt)("br",null),"- ",(0,i.kt)("inlineCode",{parentName:"td"},"unbounded"),": the ripple effect expands from the center of the button and overflows the container.",(0,i.kt)("br",null),(0,i.kt)("br",null),"NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,",(0,i.kt)("br",null),"while surfaces for unbounded ripples should have it set to visible.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Attribute")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"type"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Type")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"bounded" \\| "unbounded"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Default")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"'bounded'"))))),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"addripple"},"addRipple"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Description")),(0,i.kt)("td",{parentName:"tr",align:null},"Adds the ripple effect to the parent element.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Signature")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"addRipple(x: number, y: number) => Promise<() => void>"))))))}u.isMDXComponent=!0}}]);