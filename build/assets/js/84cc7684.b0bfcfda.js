(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[17459],{55050:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return d},toc:function(){return k},default:function(){return p}});var a=n(22122),o=n(19756),r=(n(67294),n(3905)),l=n(41395),i=n(58215),c={title:"ion-checkbox",demoUrl:"/docs/demos/api/checkbox/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/checkbox/index.html"},d={unversionedId:"api/checkbox",id:"api/checkbox",isDocsHomePage:!1,title:"ion-checkbox",description:"Checkboxes allow the selection of multiple options from a set of options. They appear as checked (ticked) when activated. Clicking on a checkbox will toggle the checked property. They can also be checked programmatically by setting the checked property.",source:"@site/docs/api/checkbox.md",sourceDirName:"api",slug:"/api/checkbox",permalink:"/docs/api/checkbox",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/api/checkbox.md",version:"current",frontMatter:{title:"ion-checkbox",demoUrl:"/docs/demos/api/checkbox/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/checkbox/index.html"},sidebar:"api",previous:{title:"ion-card-title",permalink:"/docs/api/card-title"},next:{title:"ion-chip",permalink:"/docs/api/chip"}},k=[{value:"Usage",id:"usage",children:[]},{value:"Properties",id:"properties",children:[{value:"checked",id:"checked",children:[]},{value:"color",id:"color",children:[]},{value:"disabled",id:"disabled",children:[]},{value:"indeterminate",id:"indeterminate",children:[]},{value:"mode",id:"mode",children:[]},{value:"name",id:"name",children:[]},{value:"value",id:"value",children:[]}]},{value:"Events",id:"events",children:[]},{value:"CSS Shadow Parts",id:"css-shadow-parts",children:[]},{value:"CSS Custom Properties",id:"css-custom-properties",children:[]}],m={toc:k};function p(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Checkboxes allow the selection of multiple options from a set of options. They appear as checked (ticked) when activated. Clicking on a checkbox will toggle the ",(0,r.kt)("inlineCode",{parentName:"p"},"checked")," property. They can also be checked programmatically by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"checked")," property."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(l.Z,{defaultValue:"angular",values:[{value:"angular",label:"ANGULAR"},{value:"javascript",label:"JAVASCRIPT"},{value:"react",label:"REACT"},{value:"stencil",label:"STENCIL"},{value:"vue",label:"VUE"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"angular",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Default Checkbox --\x3e\n<ion-checkbox></ion-checkbox>\n\n\x3c!-- Disabled Checkbox --\x3e\n<ion-checkbox disabled="true"></ion-checkbox>\n\n\x3c!-- Checked Checkbox --\x3e\n<ion-checkbox checked="true"></ion-checkbox>\n\n\x3c!-- Checkbox Colors --\x3e\n<ion-checkbox color="primary"></ion-checkbox>\n<ion-checkbox color="secondary"></ion-checkbox>\n<ion-checkbox color="danger"></ion-checkbox>\n<ion-checkbox color="light"></ion-checkbox>\n<ion-checkbox color="dark"></ion-checkbox>\n\n\x3c!-- Checkboxes in a List --\x3e\n<ion-list>\n  <ion-item *ngFor="let entry of form">\n    <ion-label>{{entry.val}}</ion-label>\n    <ion-checkbox slot="end" [(ngModel)]="entry.isChecked"></ion-checkbox>\n  </ion-item>\n</ion-list>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss']\n})\nexport class HomePage {\n  public form = [\n      { val: 'Pepperoni', isChecked: true },\n      { val: 'Sausage', isChecked: false },\n      { val: 'Mushroom', isChecked: false }\n    ];\n}\n"))),(0,r.kt)(i.Z,{value:"javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Default Checkbox --\x3e\n<ion-checkbox></ion-checkbox>\n\n\x3c!-- Disabled Checkbox --\x3e\n<ion-checkbox disabled></ion-checkbox>\n\n\x3c!-- Checked Checkbox --\x3e\n<ion-checkbox checked></ion-checkbox>\n\n\x3c!-- Checkbox Colors --\x3e\n<ion-checkbox color="primary"></ion-checkbox>\n<ion-checkbox color="secondary"></ion-checkbox>\n<ion-checkbox color="danger"></ion-checkbox>\n<ion-checkbox color="light"></ion-checkbox>\n<ion-checkbox color="dark"></ion-checkbox>\n\n\x3c!-- Checkboxes in a List --\x3e\n<ion-list>\n  <ion-item>\n    <ion-label>Pepperoni</ion-label>\n    <ion-checkbox slot="end" value="pepperoni" checked></ion-checkbox>\n  </ion-item>\n\n  <ion-item>\n    <ion-label>Sausage</ion-label>\n    <ion-checkbox slot="end" value="sausage" disabled></ion-checkbox>\n  </ion-item>\n\n  <ion-item>\n    <ion-label>Mushrooms</ion-label>\n    <ion-checkbox slot="end" value="mushrooms"></ion-checkbox>\n  </ion-item>\n</ion-list>\n'))),(0,r.kt)(i.Z,{value:"react",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React, { useState } from \'react\';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox, IonList, IonItem, IonLabel, IonItemDivider } from \'@ionic/react\';\n\nconst checkboxList = [\n  { val: \'Pepperoni\', isChecked: true },\n  { val: \'Sausage\', isChecked: false },\n  { val: \'Mushroom\', isChecked: false }\n];\n\nexport const CheckboxExamples: React.FC = () => {\n\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>CheckboxExamples</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonList>\n          <IonItemDivider>Default Checkbox</IonItemDivider>\n          <IonItem>\n            <IonLabel>Checked: {JSON.stringify(checked)}</IonLabel>\n            <IonCheckbox checked={checked} onIonChange={e => setChecked(e.detail.checked)} />\n          </IonItem>\n\n          <IonItemDivider>Disabled Checkbox</IonItemDivider>\n          <IonItem><IonCheckbox slot="end" disabled={true} /></IonItem>\n\n          <IonItemDivider>Checkbox Colors</IonItemDivider>\n          <IonItem>\n            <IonCheckbox slot="end" color="primary" />\n            <IonCheckbox slot="end" color="secondary" />\n            <IonCheckbox slot="end" color="danger" />\n            <IonCheckbox slot="end" color="light" />\n            <IonCheckbox slot="end" color="dark" />\n          </IonItem>\n          <IonItemDivider>Checkboxes in a List</IonItemDivider>\n\n          {checkboxList.map(({ val, isChecked }, i) => (\n            <IonItem key={i}>\n              <IonLabel>{val}</IonLabel>\n              <IonCheckbox slot="end" value={val} checked={isChecked} />\n            </IonItem>\n          ))}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\n'))),(0,r.kt)(i.Z,{value:"stencil",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'checkbox-example',\n  styleUrl: 'checkbox-example.css'\n})\nexport class CheckboxExample {\n  private form = [\n    { val: 'Pepperoni', isChecked: true },\n    { val: 'Sausage', isChecked: false },\n    { val: 'Mushroom', isChecked: false }\n  ];\n\n  render() {\n    return [\n      // Default Checkbox\n      <ion-checkbox></ion-checkbox>,\n\n      // Disabled Checkbox\n      <ion-checkbox disabled={true}></ion-checkbox>,\n\n      // Checked Checkbox\n      <ion-checkbox checked={true}></ion-checkbox>,\n\n      // Checkbox Colors\n      <ion-checkbox color=\"primary\"></ion-checkbox>,\n      <ion-checkbox color=\"secondary\"></ion-checkbox>,\n      <ion-checkbox color=\"danger\"></ion-checkbox>,\n      <ion-checkbox color=\"light\"></ion-checkbox>,\n      <ion-checkbox color=\"dark\"></ion-checkbox>,\n\n      // Checkboxes in a List\n      <ion-list>\n        {this.form.map(entry =>\n          <ion-item>\n            <ion-label>{entry.val}</ion-label>\n            <ion-checkbox slot=\"end\" checked={entry.isChecked}></ion-checkbox>\n          </ion-item>\n        )}\n      </ion-list>\n    ];\n  }\n}\n"))),(0,r.kt)(i.Z,{value:"vue",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  \x3c!-- Default Checkbox --\x3e\n  <ion-checkbox></ion-checkbox>\n\n  \x3c!-- Disabled Checkbox --\x3e\n  <ion-checkbox disabled="true"></ion-checkbox>\n\n  \x3c!-- Checked Checkbox --\x3e\n  <ion-checkbox checked="true"></ion-checkbox>\n\n  \x3c!-- Checkbox Colors --\x3e\n  <ion-checkbox color="primary"></ion-checkbox>\n  <ion-checkbox color="secondary"></ion-checkbox>\n  <ion-checkbox color="danger"></ion-checkbox>\n  <ion-checkbox color="light"></ion-checkbox>\n  <ion-checkbox color="dark"></ion-checkbox>\n\n  \x3c!-- Checkboxes in a List --\x3e\n  <ion-list>\n    <ion-item v-for="entry in form">\n      <ion-label>{{entry.val}}</ion-label>\n      <ion-checkbox\n        slot="end"\n        @update:modelValue="entry.isChecked = $event"\n        :modelValue="entry.isChecked">\n      </ion-checkbox>\n    </ion-item>\n  </ion-list>\n</template>\n\n<script>\nimport { IonCheckbox, IonItem, IonLabel, IonList } from \'@ionic/vue\';\nimport { defineComponent } from \'vue\';\n\nexport default defineComponent({\n  components: { IonCheckbox, IonItem, IonLabel, IonList },\n  setup() {\n    const form = [\n      { val: \'Pepperoni\', isChecked: true },\n      { val: \'Sausage\', isChecked: false },\n      { val: \'Mushroom\', isChecked: false }\n    ];\n    \n    return { form };\n  }\n});\n<\/script>\n')))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"checked"},"checked"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Description")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the checkbox is selected.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Attribute")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"checked"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Default")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))))),(0,r.kt)("h3",{id:"color"},"color"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Description")),(0,r.kt)("td",{parentName:"tr",align:null},"The color to use from your application's color palette.",(0,r.kt)("br",null),"Default options are: ",(0,r.kt)("inlineCode",{parentName:"td"},'"primary"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"secondary"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"tertiary"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"success"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"warning"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"danger"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"light"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"medium"'),", and ",(0,r.kt)("inlineCode",{parentName:"td"},'"dark"'),".",(0,r.kt)("br",null),"For more information on colors, see ",(0,r.kt)("a",{parentName:"td",href:"/docs/theming/basics"},"theming"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Attribute")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"color"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string \\| undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Default")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"disabled"},"disabled"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Description")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the user cannot interact with the checkbox.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Attribute")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disabled"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Default")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))))),(0,r.kt)("h3",{id:"indeterminate"},"indeterminate"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Description")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the checkbox will visually appear as indeterminate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Attribute")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"indeterminate"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Default")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))))),(0,r.kt)("h3",{id:"mode"},"mode"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Description")),(0,r.kt)("td",{parentName:"tr",align:null},"The mode determines which platform styles to use.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Attribute")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mode"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"ios" \\| "md"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Default")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"name"},"name"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Description")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the control, which is submitted with the form data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Attribute")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Default")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"this.inputId"))))),(0,r.kt)("h3",{id:"value"},"value"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Description")),(0,r.kt)("td",{parentName:"tr",align:null},"The value of the checkbox does not mean if it's checked or not, use the ",(0,r.kt)("inlineCode",{parentName:"td"},"checked"),(0,r.kt)("br",null),"property for that.",(0,r.kt)("br",null),(0,r.kt)("br",null),"The value of a checkbox is analogous to the value of an ",(0,r.kt)("inlineCode",{parentName:"td"},'<input type="checkbox">'),",",(0,r.kt)("br",null),"it's only used when the checkbox participates in a native ",(0,r.kt)("inlineCode",{parentName:"td"},"<form>"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Attribute")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Default")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'on'"))))),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ionBlur")),(0,r.kt)("td",{parentName:"tr",align:null},"Emitted when the checkbox loses focus.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ionChange")),(0,r.kt)("td",{parentName:"tr",align:null},"Emitted when the checked property has changed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ionFocus")),(0,r.kt)("td",{parentName:"tr",align:null},"Emitted when the checkbox has focus.")))),(0,r.kt)("h2",{id:"css-shadow-parts"},"CSS Shadow Parts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"container")),(0,r.kt)("td",{parentName:"tr",align:null},"The container for the checkbox mark.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mark")),(0,r.kt)("td",{parentName:"tr",align:null},"The checkmark used to indicate the checked state.")))),(0,r.kt)("h2",{id:"css-custom-properties"},"CSS Custom Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--background")),(0,r.kt)("td",{parentName:"tr",align:null},"Background of the checkbox icon")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--background-checked")),(0,r.kt)("td",{parentName:"tr",align:null},"Background of the checkbox icon when checked")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--border-color")),(0,r.kt)("td",{parentName:"tr",align:null},"Border color of the checkbox icon")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--border-color-checked")),(0,r.kt)("td",{parentName:"tr",align:null},"Border color of the checkbox icon when checked")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--border-radius")),(0,r.kt)("td",{parentName:"tr",align:null},"Border radius of the checkbox icon")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--border-style")),(0,r.kt)("td",{parentName:"tr",align:null},"Border style of the checkbox icon")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--border-width")),(0,r.kt)("td",{parentName:"tr",align:null},"Border width of the checkbox icon")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--checkmark-color")),(0,r.kt)("td",{parentName:"tr",align:null},"Color of the checkbox checkmark when checked")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--checkmark-width")),(0,r.kt)("td",{parentName:"tr",align:null},"Stroke width of the checkbox checkmark")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--size")),(0,r.kt)("td",{parentName:"tr",align:null},"Size of the checkbox icon")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--transition")),(0,r.kt)("td",{parentName:"tr",align:null},"Transition of the checkbox icon")))))}p.isMDXComponent=!0}}]);