(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[59043],{76922:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return a},metadata:function(){return r},toc:function(){return s},default:function(){return p}});var l=n(22122),o=n(19756),i=(n(67294),n(3905)),a={title:"config set",sidebar_label:"config set"},r={unversionedId:"cli/commands/config-set",id:"cli/commands/config-set",isDocsHomePage:!1,title:"ionic config set",description:"Set config values",source:"@site/docs/cli/commands/config-set.md",sourceDirName:"cli/commands",slug:"/cli/commands/config-set",permalink:"/docs/cli/commands/config-set",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/cli/commands/config-set.md",version:"current",sidebar_label:"config set",frontMatter:{title:"config set",sidebar_label:"config set"},sidebar:"cli",previous:{title:"ionic config get",permalink:"/docs/cli/commands/config-get"},next:{title:"ionic config unset",permalink:"/docs/cli/commands/config-unset"}},s=[{value:"Examples",id:"examples",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Options",id:"options",children:[]},{value:"Advanced Options",id:"advanced-options",children:[]}],c={toc:s};function p(t){var e=t.components,n=(0,o.Z)(t,["components"]);return(0,i.kt)("wrapper",(0,l.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Set config values"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic config set [options]\n")),(0,i.kt)("p",null,"This command writes configuration values to the project's ",(0,i.kt)("strong",{parentName:"p"},"./ionic.config.json")," file. It can also operate on the global CLI configuration (",(0,i.kt)("strong",{parentName:"p"},"~/.ionic/config.json"),") using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--global")," option."),(0,i.kt)("p",null,"For nested properties, separate nest levels with dots. For example, the property name ",(0,i.kt)("inlineCode",{parentName:"p"},"integrations.cordova")," will look in the ",(0,i.kt)("strong",{parentName:"p"},"integrations")," object for the ",(0,i.kt)("strong",{parentName:"p"},"cordova")," property."),(0,i.kt)("p",null,"For multi-app projects, this command is scoped to the current project by default. To operate at the root of the project configuration file instead, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"--root")," option."),(0,i.kt)("p",null,"This command will attempt to coerce ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," into a suitable JSON type. If it is JSON-parsable, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"123"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"[]"),", etc., then it takes the parsed result. Otherwise, the value is interpreted as a string. For stricter input, use ",(0,i.kt)("inlineCode",{parentName:"p"},"--json"),", which will error with non-JSON values."),(0,i.kt)("p",null,"By default, if ",(0,i.kt)("inlineCode",{parentName:"p"},"property")," exists and is an object or an array, the value is not overwritten. To disable this check and always overwrite the property, use ",(0,i.kt)("inlineCode",{parentName:"p"},"--force"),"."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ ionic config set name newAppName\n$ ionic config set name "\\"newAppName\\"" --json\n$ ionic config set -g interactive false\n')),(0,i.kt)("h2",{id:"inputs"},"Inputs"),(0,i.kt)("table",{className:"reference-table"},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,"property")))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"The property name you wish to set")))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,"value")))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"The new value of the given property"))))),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("table",{className:"reference-table"},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-global",id:"option-global"},"--global"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"Use global CLI config"))),(0,i.kt)("tr",null,(0,i.kt)("th",null,"Aliases"),(0,i.kt)("td",null,(0,i.kt)("code",null,"-g"))))),(0,i.kt)("h2",{id:"advanced-options"},"Advanced Options"),(0,i.kt)("table",{className:"reference-table"},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-json",id:"option-json"},"--json"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("div",null,(0,i.kt)("p",null,"Always interpret ",(0,i.kt)("code",null,"value")," as JSON"))))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-force",id:"option-force"},"--force"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("div",null,(0,i.kt)("p",null,"Always overwrite existing values"))))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-root",id:"option-root"},"--root"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("div",null,(0,i.kt)("p",null,"Operate on root of ",(0,i.kt)("strong",null,"./ionic.config.json"))))))))}p.isMDXComponent=!0}}]);