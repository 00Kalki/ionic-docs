(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[7103],{68525:function(e,t,i){"use strict";i.r(t),i.d(t,{frontMatter:function(){return n},metadata:function(){return s},toc:function(){return c},default:function(){return l}});var o=i(22122),a=i(19756),r=(i(67294),i(3905)),n={},s={unversionedId:"core-concepts/webview",id:"core-concepts/webview",isDocsHomePage:!1,title:"Web View",description:"Web Views power web apps on native devices.",source:"@site/docs/core-concepts/webview.md",sourceDirName:"core-concepts",slug:"/core-concepts/webview",permalink:"/docs/core-concepts/webview",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/core-concepts/webview.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Cross Platform",permalink:"/docs/core-concepts/cross-platform"},next:{title:"Progressive Web Apps",permalink:"/docs/core-concepts/what-are-progressive-web-apps"}},c=[{value:"What is a Web View?",id:"what-is-a-web-view",children:[{value:"CORS",id:"cors",children:[]},{value:"File Protocol",id:"file-protocol",children:[]},{value:"Implementations",id:"implementations",children:[]}]}],p={toc:c};function l(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Web Views power web apps on native devices."),(0,r.kt)("p",null,"The Web View is automatically provided for apps integrated with ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/glossary#capacitor"},"Capacitor"),"."),(0,r.kt)("p",null,"For ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/glossary#cordova"},"Cordova"),", Ionic maintains a ",(0,r.kt)("a",{href:"https://github.com/ionic-team/cordova-plugin-ionic-webview",target:"_blank"},"Web View plugin"),". The plugin is provided by default when using the Ionic CLI."),(0,r.kt)("h2",{id:"what-is-a-web-view"},"What is a Web View?"),(0,r.kt)("p",null,"Ionic apps are built using ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/glossary#web-standards"},"web technologies")," and are rendered using Web Views, which are a full screen and full-powered web browser."),(0,r.kt)("p",null,"Modern Web Views offer many built-in ",(0,r.kt)("a",{href:"https://whatwebcando.today",target:"_blank"},"HTML5 APIs")," for hardware functionality such as cameras, sensors, GPS, speakers, and Bluetooth, but sometimes it may also be necessary to access platform-specific hardware APIs. In Ionic apps, hardware APIs can be accessed through a bridge layer, typically by using native plugins which expose JavaScript APIs."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"webview architecture",src:i(70342).Z})),(0,r.kt)("p",null,"The Ionic Web View plugin is specialized for modern JavaScript apps. For both iOS and Android, app files are always hosted using the ",(0,r.kt)("inlineCode",{parentName:"p"},"http://")," protocol with an optimized HTTP server that runs on the local device."),(0,r.kt)("h3",{id:"cors"},"CORS"),(0,r.kt)("p",null,"Web Views enforce ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/glossary#cors"},"CORS"),", so it's important that external services properly handle cross-origin requests. See the ",(0,r.kt)("a",{parentName:"p",href:"/docs/troubleshooting/cors"},"CORS FAQs")," for information on dealing with CORS in Ionic apps."),(0,r.kt)("h3",{id:"file-protocol"},"File Protocol"),(0,r.kt)("p",null,"Capacitor and Cordova apps are hosted on a local HTTP server and are served with the ",(0,r.kt)("inlineCode",{parentName:"p"},"http://")," protocol. Some plugins, however, attempt to access device files via the ",(0,r.kt)("inlineCode",{parentName:"p"},"file://")," protocol. To avoid difficulties between ",(0,r.kt)("inlineCode",{parentName:"p"},"http://")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"file://"),", paths to device files must be rewritten to use the local HTTP server. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"file:///path/to/device/file")," must be rewritten as ",(0,r.kt)("inlineCode",{parentName:"p"},"http://<host>:<port>/<prefix>/path/to/device/file")," before being rendered in the app."),(0,r.kt)("p",null,"For Capacitor apps, convert file URIs like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Capacitor } from '@capacitor/core';\n\nCapacitor.convertFileSrc(filePath);\n")),(0,r.kt)("p",null,"For Cordova apps, the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ionic-team/cordova-plugin-ionic-webview"},"Ionic Web View plugin")," provides a utility function for converting File URIs: ",(0,r.kt)("inlineCode",{parentName:"p"},"window.Ionic.WebView.convertFileSrc()"),". There is also a corresponding Ionic Native plugin: ",(0,r.kt)("a",{parentName:"p",href:"/docs/native/ionic-webview/"},(0,r.kt)("inlineCode",{parentName:"a"},"@ionic-native/ionic-webview")),"."),(0,r.kt)("h3",{id:"implementations"},"Implementations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"iOS"),": ",(0,r.kt)("a",{href:"https://developer.apple.com/documentation/webkit/wkwebview",target:"_blank"},"WKWebView")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Android"),": ",(0,r.kt)("a",{href:"https://developer.chrome.com/multidevice/webview/overview",target:"_blank"},"Web View for Android"))))}l.isMDXComponent=!0},70342:function(e,t,i){"use strict";t.Z=i.p+"assets/images/webview-architecture-bee351034ebbd5238a77b1a254d2dcbd.png"}}]);