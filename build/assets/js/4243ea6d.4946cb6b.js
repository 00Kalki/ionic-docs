(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[87883],{16239:function(n,e,t){"use strict";t.d(e,{Z:function(){return c}});var o=t(22122),a=t(19756),s=t(86010),i=t(67294),r="docsButton_2Emz",l="docsButtonRound_3i9G";function c(n){var e,t=n.href,c=n.round,u=void 0!==c&&c,p=(0,a.Z)(n,["href","round"]);return p.className=(0,s.Z)(((e={})[p.className]=Boolean(p.className),e[r]=!0,e["docs-button"]=!0,e[l]=u,e["docs-button--round"]=u,e)),t?i.createElement("a",(0,o.Z)({href:t,className:"docsButton"},p),p.children):i.createElement("button",(0,o.Z)({className:"docsButton"},p),p.children)}},98042:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return p},metadata:function(){return d},toc:function(){return m},default:function(){return g}});var o=t(22122),a=t(19756),s=(t(67294),t(3905)),i=t(28312),r=t(16239),l=t(41395),c=t(58215),u=t(81840),p={title:"Music Controls"},d={unversionedId:"native/plugins/music-controls",id:"native/plugins/music-controls",isDocsHomePage:!1,title:"Music Controls",description:"Music controls for Cordova applications.",source:"@site/docs/native/plugins/music-controls.md",sourceDirName:"native/plugins",slug:"/native/plugins/music-controls",permalink:"/docs/native/plugins/music-controls",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/native/plugins/music-controls.md",version:"current",frontMatter:{title:"Music Controls"},sidebar:"native",previous:{title:"Multiple Documents Picker",permalink:"/docs/native/plugins/multiple-document-picker"},next:{title:"Native Audio",permalink:"/docs/native/plugins/native-audio"}},m=[{value:"Supported Platforms",id:"supported-platforms",children:[]},{value:"Capacitor",id:"capacitor",children:[]},{value:"Usage",id:"usage",children:[{value:"React",id:"react",children:[]},{value:"Angular",id:"angular",children:[]}]}],h={toc:m};function g(n){var e=n.components,t=(0,a.Z)(n,["components"]);return(0,s.kt)("wrapper",(0,o.Z)({},h,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Music controls for Cordova applications.\nDisplay a 'media' notification with play/pause, previous, next buttons, allowing the user to control the play.\nHandle also headset event (plug, unplug, headset button)."),(0,s.kt)("p",null,(0,s.kt)("a",{href:"https://github.com/ghenry22/cordova-plugin-music-controls2",target:"_blank",rel:"noopener",className:"git-link"},(0,s.kt)("svg",{viewBox:"0 0 512 512"},(0,s.kt)("path",{d:"M416 160c0-35.3-28.7-64-64-64s-64 28.7-64 64c0 23.7 12.9 44.3 32 55.4v8.6c0 19.9-7.8 33.7-25.3 44.9-15.4 9.8-38.1 17.1-67.5 21.5-14 2.1-25.7 6-35.2 10.7V151.4c19.1-11.1 32-31.7 32-55.4 0-35.3-28.7-64-64-64S96 60.7 96 96c0 23.7 12.9 44.3 32 55.4v209.2c-19.1 11.1-32 31.7-32 55.4 0 35.3 28.7 64 64 64s64-28.7 64-64c0-16.6-6.3-31.7-16.7-43.1 1.9-4.9 9.7-16.3 29.4-19.3 38.8-5.8 68.9-15.9 92.3-30.8 36-22.8 55-57 55-98.8v-8.6c19.1-11.1 32-31.7 32-55.4zM160 56c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zm0 400c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm192-256c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z"}))," https://github.com/ghenry22/cordova-plugin-music-controls2")),(0,s.kt)("h2",null,"Stuck on a Cordova issue?"),(0,s.kt)(i.Z,{className:"cordova-ee-card",header:"Don't waste precious time on plugin issues.",href:"https://ionicframework.com/sales?product_of_interest=Ionic%20Native",mdxType:"DocsCard"},(0,s.kt)("div",null,(0,s.kt)("img",{src:"/docs/icons/native-cordova-bot.png",class:"cordova-ee-img"}),(0,s.kt)("p",null,"If you're building a serious project, you can't afford to spend hours troubleshooting. Ionic\u2019s experts offer premium advisory services for both community plugins and premier plugins."),(0,s.kt)(r.Z,{className:"native-ee-detail",mdxType:"DocsButton"},"Contact Us Today!"))),(0,s.kt)("h2",{id:"installation"},(0,s.kt)("a",{href:"#installation"},"Installation")),(0,s.kt)(l.Z,{defaultValue:"Capacitor",values:[{value:"Capacitor",label:"Capacitor"},{value:"Cordova",label:"Cordova"},{value:"Enterprise",label:"Enterprise"}],mdxType:"Tabs"},(0,s.kt)(c.Z,{value:"Capacitor",mdxType:"TabItem"},(0,s.kt)(u.Z,{className:"language-shell",mdxType:"CodeBlock"},"$ npm install cordova-plugin-music-controls2 ","\n","$ npm install @ionic-native/music-controls ","\n","$ ionic cap sync")),(0,s.kt)(c.Z,{value:"Cordova",mdxType:"TabItem"},(0,s.kt)(u.Z,{className:"language-shell",mdxType:"CodeBlock"},"$ ionic cordova plugin add cordova-plugin-music-controls2 ","\n","$ npm install @ionic-native/music-controls ","\n")),(0,s.kt)(c.Z,{value:"Enterprise",mdxType:"TabItem"},(0,s.kt)("blockquote",null,"Ionic Enterprise comes with fully supported and maintained plugins from the Ionic Team. \xa0",(0,s.kt)("a",{class:"btn",href:"https://ionic.io/docs/premier-plugins"},"Learn More")," or if you're interested in an enterprise version of this plugin ",(0,s.kt)("a",{class:"btn",href:"https://ionicframework.com/sales?product_of_interest=Ionic%20Enterprise%20Engine"},"Contact Us")))),(0,s.kt)("h2",{id:"supported-platforms"},"Supported Platforms"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Android"),(0,s.kt)("li",{parentName:"ul"},"iOS"),(0,s.kt)("li",{parentName:"ul"},"Windows")),(0,s.kt)("h2",{id:"capacitor"},"Capacitor"),(0,s.kt)("p",null,"Not Compatible"),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("h3",{id:"react"},"React"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/docs/native/community#react"},"Learn more about using Ionic Native components in React")),(0,s.kt)("h3",{id:"angular"},"Angular"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { MusicControls } from '@ionic-native/music-controls/ngx';\n\nconstructor(private musicControls: MusicControls) { }\n\n...\n\nthis.musicControls.create({\n  track       : 'Time is Running Out',        // optional, default : ''\n  artist      : 'Muse',                       // optional, default : ''\n  cover       : 'albums/absolution.jpg',      // optional, default : nothing\n  // cover can be a local path (use fullpath 'file:///storage/emulated/...', or only 'my_image.jpg' if my_image.jpg is in the www folder of your app)\n  //           or a remote url ('http://...', 'https://...', 'ftp://...')\n  isPlaying   : true,                         // optional, default : true\n  dismissable : true,                         // optional, default : false\n\n  // hide previous/next/close buttons:\n  hasPrev   : false,      // show previous button, optional, default: true\n  hasNext   : false,      // show next button, optional, default: true\n  hasClose  : true,       // show close button, optional, default: false\n\n// iOS only, optional\n  album       : 'Absolution',     // optional, default: ''\n  duration : 60, // optional, default: 0\n  elapsed : 10, // optional, default: 0\n  hasSkipForward : true,  // show skip forward button, optional, default: false\n  hasSkipBackward : true, // show skip backward button, optional, default: false\n  skipForwardInterval: 15, // display number for skip forward, optional, default: 0\n  skipBackwardInterval: 15, // display number for skip backward, optional, default: 0\n  hasScrubbing: false, // enable scrubbing from control center and lockscreen progress bar, optional\n\n  // Android only, optional\n  // text displayed in the status bar when the notification (and the ticker) are updated, optional\n  ticker    : 'Now playing \"Time is Running Out\"',\n  // All icons default to their built-in android equivalents\n  playIcon: 'media_play',\n  pauseIcon: 'media_pause',\n  prevIcon: 'media_prev',\n  nextIcon: 'media_next',\n  closeIcon: 'media_close',\n  notificationIcon: 'notification'\n });\n\n this.musicControls.subscribe().subscribe(action => {\n\n   function events(action) {\n     const message = JSON.parse(action).message;\n        switch(message) {\n            case 'music-controls-next':\n                // Do something\n                break;\n            case 'music-controls-previous':\n                // Do something\n                break;\n            case 'music-controls-pause':\n                // Do something\n                break;\n            case 'music-controls-play':\n                // Do something\n                break;\n            case 'music-controls-destroy':\n                // Do something\n                break;\n\n         // External controls (iOS only)\n         case 'music-controls-toggle-play-pause' :\n                // Do something\n                break;\n         case 'music-controls-seek-to':\n           const seekToInSeconds = JSON.parse(action).position;\n           this.musicControls.updateElapsed({\n             elapsed: seekToInSeconds,\n             isPlaying: true\n           });\n           // Do something\n           break;\n         case 'music-controls-skip-forward':\n           // Do something\n           break;\n         case 'music-controls-skip-backward':\n           // Do something\n           break;\n\n            // Headset events (Android only)\n            // All media button events are listed below\n            case 'music-controls-media-button' :\n                // Do something\n                break;\n            case 'music-controls-headset-unplugged':\n                // Do something\n                break;\n            case 'music-controls-headset-plugged':\n                // Do something\n                break;\n            default:\n                break;\n        }\n     }\n    });\n\n this.musicControls.listen(); // activates the observable above\n\n this.musicControls.updateIsPlaying(true);\n\n\n")))}g.isMDXComponent=!0}}]);