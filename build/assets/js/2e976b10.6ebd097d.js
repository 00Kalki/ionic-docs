(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[72958],{28193:function(e,a,t){"use strict";t.r(a),t.d(a,{frontMatter:function(){return i},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var n=t(22122),o=t(19756),r=(t(67294),t(3905)),i={},p={unversionedId:"developer-resources/guides/first-app-v3/ios-android-camera",id:"developer-resources/guides/first-app-v3/ios-android-camera",isDocsHomePage:!1,title:"Android, iOS, and the Camera - Oh My!",description:"Previously, we got an Ionic app up and running locally in a web browser. Now, let\u2019s get it onto your iOS or Android device, then start building the photo gallery feature. Fortunately, Ionic provides a way to skip the frustration of dealing with native SDK installations: Ionic DevApp!",source:"@site/docs/developer-resources/guides/first-app-v3/ios-android-camera.md",sourceDirName:"developer-resources/guides/first-app-v3",slug:"/developer-resources/guides/first-app-v3/ios-android-camera",permalink:"/docs/developer-resources/guides/first-app-v3/ios-android-camera",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/developer-resources/guides/first-app-v3/ios-android-camera.md",version:"current",frontMatter:{}},l=[{value:"Add the Camera Dependencies via the CLI",id:"add-the-camera-dependencies-via-the-cli",children:[]},{value:"Add Camera plugin to Angular App Module",id:"add-camera-plugin-to-angular-app-module",children:[]},{value:"Add the Camera to the About page",id:"add-the-camera-to-the-about-page",children:[]}],s={toc:l};function d(e){var a=e.components,t=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,n.Z)({},s,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Previously, we got an Ionic app up and running locally in a web browser. Now, let\u2019s get it onto your iOS or Android device, then start building the photo gallery feature. Fortunately, Ionic provides a way to skip the frustration of dealing with native SDK installations: Ionic DevApp!"),(0,r.kt)("p",null,"The Ionic DevApp is a free app that makes it easy to run your Ionic app directly on your iOS or Android device. Download it here, then open on your device:"),(0,r.kt)("a",{href:"https://itunes.apple.com/us/app/ionic-devapp/id1233447133?ls=1&mt=8"},(0,r.kt)("img",{src:"/docs/img/guides/first-app-v3/appstore.png"})),(0,r.kt)("a",{href:"https://play.google.com/store/apps/details?id=io.ionic.devapp&hl=en"},(0,r.kt)("img",{src:"/docs/img/guides/first-app-v3/playstore.png"})),(0,r.kt)("p",null,"Afterwards, open a terminal and navigate to your Ionic project. Execute the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic serve -c\n")),(0,r.kt)("p",null,"In DevApp, you should now see the app appear. If it doesn't, or you have any issues throughout creating this app, ",(0,r.kt)("a",{parentName:"p",href:"https://ionicframework.com/docs/pro/devapp/"},"see here"),"."),(0,r.kt)("p",null,"Much better! Now we can add the camera functionality. By the way, you can find reference code for this in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ionic-team/photo-gallery-tutorial-ionic3/tree/master/part1"},"the \u201cpart 1\u201d folder")," on GitHub."),(0,r.kt)("p",null,"Back in ",(0,r.kt)("inlineCode",{parentName:"p"},"about.html"),", add the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<ion-content>\n  <img />\n\n  <ion-fab center bottom>\n    <button ion-fab>\n      <ion-icon name="camera"></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n')),(0,r.kt)("p",null,"Save the file and watch - a camera button appears! Tap on it and notice that it doesn\u2019t do anything. Let\u2019s fix that next."),(0,r.kt)("h2",{id:"add-the-camera-dependencies-via-the-cli"},"Add the Camera Dependencies via the CLI"),(0,r.kt)("p",null,"In order to use the Camera, we need to bring in its JavaScript and native library dependencies. Back over in your Terminal window, run the following command, which adds the JavaScript library to the project, thus exposing the Camera API in TypeScript code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ npm install --save @ionic-native/camera\n")),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),", you\u2019ll notice a new JavaScript dependency has been added:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'"@ionic-native/camera": "^4.12.0"')),(0,r.kt)("p",null,"Next, run this command to add the native iOS and Android code, effectively allowing the Camera to work on a mobile device:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic cordova plugin add cordova-plugin-camera\n")),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"config.xml"),", a new plugin entry is created:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<plugin name="cordova-plugin-camera" spec="^4.0.3" />\n')),(0,r.kt)("p",null,"The next step is only required for iOS users. As of iOS 10, developers must provide a reason for why the app wishes to access the device camera. Add this to the bottom of ",(0,r.kt)("inlineCode",{parentName:"p"},"config.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- Required for iOS 10: Camera permission prompt --\x3e\n<edit-config file="*-Info.plist" mode="merge" target="NSCameraUsageDescription">\n    <string>Used to take pictures</string>\n</edit-config>\n')),(0,r.kt)("h2",{id:"add-camera-plugin-to-angular-app-module"},"Add Camera plugin to Angular App Module"),(0,r.kt)("p",null,"There\u2019s one more step we need to do since this is an Angular project: register the Camera in the App Module (",(0,r.kt)("inlineCode",{parentName:"p"},"src/app/app.module.ts"),"). First, import the Camera module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"},"import { Camera } from '@ionic-native/camera';\n")),(0,r.kt)("p",null,"Then, add it as a Provider:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"},"providers: [\n    StatusBar,\n    SplashScreen,\n    Camera,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ],\n")),(0,r.kt)("p",null,"It can now be used on any of our App pages."),(0,r.kt)("h2",{id:"add-the-camera-to-the-about-page"},"Add the Camera to the About page"),(0,r.kt)("p",null,"Our camera button doesn\u2019t do anything yet. Over in ",(0,r.kt)("inlineCode",{parentName:"p"},"about.html"),", add a click handler to the button:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<button ion-fab (click)="takePicture()"></button>\n')),(0,r.kt)("p",null,"Then, update the image placeholder. The following binds the \u201ccurrentImage\u201d variable (which we\u2019ll work on next) to the image to display to the user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<img [src]="currentImage" *ngIf="currentImage" />\n')),(0,r.kt)("p",null,"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"about.ts")," next and import the Camera library:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"},"import { Camera, CameraOptions } from '@ionic-native/camera';\n")),(0,r.kt)("p",null,"Next, define the \u201ccurrentImage\u201d variable and inject the Camera into this class via the constructor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"},"export class AboutPage {\n  currentImage: any;\n\n  constructor(public navCtrl: NavController, private camera: Camera) {\n}\n")),(0,r.kt)("p",null,"Finally, add the \u201ctakePicture\u201d method, already wired up to execute once the camera button has been tapped:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"},"takePicture() {\n    const options: CameraOptions = {\n      quality: 100,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE\n    }\n\n    this.camera.getPicture(options).then((imageData) => {\n      this.currentImage = 'data:image/jpeg;base64,' + imageData;\n    }, (err) => {\n     // Handle error\n     console.log(\"Camera issue:\" + err);\n    });\n  }\n")),(0,r.kt)("p",null,"Take notice: there\u2019s no mention of iOS or Android! This is the awesome power of plugins: you use one API (",(0,r.kt)("inlineCode",{parentName:"p"},"camera.getPicture()")," in this case) and the plugin takes care of the platform differences for you. Write once, run everywhere ",(0,r.kt)("inlineCode",{parentName:"p"},":)")),(0,r.kt)("p",null,"Save this file then tap the Camera button in DevApp. Voila! The camera should open on your device. Once a photo has been taken, it displays on the Photo Gallery page."),(0,r.kt)("p",null,"Finally, back up your changes to Appflow:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git add .\ngit commit -m \u201cadded camera functionality\u201d\ngit push ionic master\n")),(0,r.kt)("p",null,"Next, we\u2019ll look at how to transform the app into a photo gallery, as well as how to save the photos to your device!"))}d.isMDXComponent=!0}}]);