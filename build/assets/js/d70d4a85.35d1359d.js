(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[65067],{2097:function(e,a,t){"use strict";t.r(a),t.d(a,{frontMatter:function(){return r},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var n=t(22122),o=t(19756),i=(t(67294),t(3905)),r={},l={unversionedId:"theming/css-variables",id:"theming/css-variables",isDocsHomePage:!1,title:"CSS Variables",description:"Ionic components are built with CSS Variables for easy customization of an application. CSS variables allow a value to be stored in one place, then referenced in multiple other places. They also make it possible to change CSS dynamically at runtime (which previously required a CSS preprocessor). CSS variables make it easier than ever to override Ionic components to match a brand or theme.",source:"@site/docs/theming/css-variables.md",sourceDirName:"theming",slug:"/theming/css-variables",permalink:"/docs/theming/css-variables",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/theming/css-variables.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Platform Styles",permalink:"/docs/theming/platform-styles"},next:{title:"CSS Shadow Parts",permalink:"/docs/theming/css-shadow-parts"}},s=[{value:"Setting Values",id:"setting-values",children:[{value:"Global Variables",id:"global-variables",children:[]},{value:"Component Variables",id:"component-variables",children:[]},{value:"Variables set via JavaScript",id:"variables-set-via-javascript",children:[]}]},{value:"Getting Values",id:"getting-values",children:[{value:"Using CSS",id:"using-css",children:[]},{value:"Using JavaScript",id:"using-javascript",children:[]}]},{value:"Ionic Variables",id:"ionic-variables",children:[{value:"Component Variables",id:"component-variables-1",children:[]},{value:"Global Variables",id:"global-variables-1",children:[]}]}],c={toc:s};function p(e){var a=e.components,t=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Ionic components are built with ",(0,i.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables",target:"_blank"},"CSS Variables")," for easy customization of an application. CSS variables allow a value to be stored in one place, then referenced in multiple other places. They also make it possible to change CSS dynamically at runtime (which previously required a CSS preprocessor). CSS variables make it easier than ever to override Ionic components to match a brand or theme."),(0,i.kt)("h2",{id:"setting-values"},"Setting Values"),(0,i.kt)("h3",{id:"global-variables"},"Global Variables"),(0,i.kt)("p",null,"CSS variables can be set globally in an application in the ",(0,i.kt)("inlineCode",{parentName:"p"},":root")," selector. They can also be applied only for a specific mode. See ",(0,i.kt)("a",{parentName:"p",href:"#ionic-variables"},"Ionic Variables")," for more information on the global variables Ionic provides."),(0,i.kt)("p",null,"When using the Ionic CLI to start an Angular project, the ",(0,i.kt)("inlineCode",{parentName:"p"},"src/theme/variables.scss")," file is created where you can override the default Ionic Variables."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},'/* Set variables for all modes */\n:root {\n  /* Set the background of the entire app */\n  --ion-background-color: #ff3700;\n\n  /* Set the font family of the entire app */\n  --ion-font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Roboto", sans-serif;\n}\n\n/* Set text color of the entire app for iOS only */\n.ios {\n  --ion-text-color: #000;\n}\n\n/* Set text color of the entire app for Material Design only */\n.md {\n  --ion-text-color: #222;\n}\n')),(0,i.kt)("h3",{id:"component-variables"},"Component Variables"),(0,i.kt)("p",null,"To set a CSS variable for a specific component, add the variable inside of its selector. See ",(0,i.kt)("a",{parentName:"p",href:"#ionic-variables"},"Ionic Variables")," for more information on the component-level variables Ionic provides."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},"/* Set the color on all ion-button elements */\nion-button {\n  --color: #222;\n}\n\n/* Set the background on an ion-button with the .fancy-button class */\n.fancy-button {\n  --background: #00ff00;\n}\n")),(0,i.kt)("h3",{id:"variables-set-via-javascript"},"Variables set via JavaScript"),(0,i.kt)("p",null,"CSS variables can also be changed via JavaScript using ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty"},"setProperty()"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const el = document.querySelector('.fancy-button');\nel.style.setProperty('--background', '#36454f');\n")),(0,i.kt)("h2",{id:"getting-values"},"Getting Values"),(0,i.kt)("h3",{id:"using-css"},"Using CSS"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/var"},"var() CSS function")," can be used to get the value of a CSS variable, along with any number of fallback values, if desired. In the below example, the ",(0,i.kt)("inlineCode",{parentName:"p"},"--background")," property will be set to the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"--charcoal")," variable, if defined, and if not it will use ",(0,i.kt)("inlineCode",{parentName:"p"},"#36454f"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".fancy-button {\n  --background: var(--charcoal, #36454f);\n}\n")),(0,i.kt)("h3",{id:"using-javascript"},"Using JavaScript"),(0,i.kt)("p",null,"The value of a CSS variable can be read in JavaScript using ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue"},"getPropertyValue()"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const el = document.querySelector('.fancy-button');\nconst color = el.style.getPropertyValue('--charcoal');\n")),(0,i.kt)("h2",{id:"ionic-variables"},"Ionic Variables"),(0,i.kt)("h3",{id:"component-variables-1"},"Component Variables"),(0,i.kt)("p",null,"Ionic provides variables that exist at the component level, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"--background")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--color"),". For a list of the custom properties a component accepts, view the ",(0,i.kt)("inlineCode",{parentName:"p"},"CSS Custom Properties")," section of its ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/"},"API reference"),". For example, see the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/button#css-custom-properties"},"Button CSS Custom Properties"),"."),(0,i.kt)("h3",{id:"global-variables-1"},"Global Variables"),(0,i.kt)("p",null,"There are several global variables that Ionic provides in order to make theming an entire application easier. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/theming/colors"},"Colors"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/theming/themes"},"Themes")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/theming/advanced"},"Advanced Theming"),"."))}p.isMDXComponent=!0}}]);