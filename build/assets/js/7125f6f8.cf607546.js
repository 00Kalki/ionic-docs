(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[7692],{16239:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var a=n(22122),r=n(19756),o=n(86010),i=n(67294),s="docsButton_2Emz",l="docsButtonRound_3i9G";function c(e){var t,n=e.href,c=e.round,p=void 0!==c&&c,u=(0,r.Z)(e,["href","round"]);return u.className=(0,o.Z)(((t={})[u.className]=Boolean(u.className),t[s]=!0,t["docs-button"]=!0,t[l]=p,t["docs-button--round"]=p,t)),n?i.createElement("a",(0,a.Z)({href:n,className:"docsButton"},u),u.children):i.createElement("button",(0,a.Z)({className:"docsButton"},u),u.children)}},95337:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return u},metadata:function(){return d},toc:function(){return m},default:function(){return v}});var a=n(22122),r=n(19756),o=(n(67294),n(3905)),i=n(28312),s=n(16239),l=n(41395),c=n(58215),p=n(81840),u={title:"Braintree"},d={unversionedId:"native/plugins/braintree",id:"native/plugins/braintree",isDocsHomePage:!1,title:"Braintree",description:"This plugin enables the use of the Braintree Drop-In Payments UI in your Ionic applications on Android and iOS, using the native Drop-In UI for each platform (not the Javascript SDK).",source:"@site/docs/native/plugins/braintree.md",sourceDirName:"native/plugins",slug:"/native/plugins/braintree",permalink:"/docs/native/plugins/braintree",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/native/plugins/braintree.md",version:"current",frontMatter:{title:"Braintree"},sidebar:"native",previous:{title:"Bluetooth Serial",permalink:"/docs/native/plugins/bluetooth-serial"},next:{title:"BranchIo",permalink:"/docs/native/plugins/branch-io"}},m=[{value:"Supported Platforms",id:"supported-platforms",children:[]},{value:"Capacitor",id:"capacitor",children:[]},{value:"Usage",id:"usage",children:[{value:"React",id:"react",children:[]},{value:"Angular",id:"angular",children:[]}]}],h={toc:m};function v(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This plugin enables the use of the Braintree Drop-In Payments UI in your Ionic applications on Android and iOS, using the native Drop-In UI for each platform (not the Javascript SDK)."),(0,o.kt)("p",null," Ionic Native utilizes ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/taracque/cordova-plugin-braintree"},"a maintained fork")," of the original ",(0,o.kt)("inlineCode",{parentName:"p"},"cordova-plugin-braintree")),(0,o.kt)("p",null," For information on how to use Apple Pay with this plugin, please refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Taracque/cordova-plugin-braintree#apple-pay-ios-only"},"plugin documentation")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE"),": This is not a complete payments solution. All of the Braintree client-side UIs simply generate a payment nonce that must then be processed by your server to complete the payment.\nSee the ",(0,o.kt)("a",{parentName:"p",href:"https://developers.braintreepayments.com/start/hello-server/node"},"Braintree Node server documentation")," for details and a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/braintree/braintree_express_example"},"sample Express server")," that implements the required functionality."),(0,o.kt)("p",null,(0,o.kt)("a",{href:"https://github.com/taracque/cordova-plugin-braintree",target:"_blank",rel:"noopener",className:"git-link"},(0,o.kt)("svg",{viewBox:"0 0 512 512"},(0,o.kt)("path",{d:"M416 160c0-35.3-28.7-64-64-64s-64 28.7-64 64c0 23.7 12.9 44.3 32 55.4v8.6c0 19.9-7.8 33.7-25.3 44.9-15.4 9.8-38.1 17.1-67.5 21.5-14 2.1-25.7 6-35.2 10.7V151.4c19.1-11.1 32-31.7 32-55.4 0-35.3-28.7-64-64-64S96 60.7 96 96c0 23.7 12.9 44.3 32 55.4v209.2c-19.1 11.1-32 31.7-32 55.4 0 35.3 28.7 64 64 64s64-28.7 64-64c0-16.6-6.3-31.7-16.7-43.1 1.9-4.9 9.7-16.3 29.4-19.3 38.8-5.8 68.9-15.9 92.3-30.8 36-22.8 55-57 55-98.8v-8.6c19.1-11.1 32-31.7 32-55.4zM160 56c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zm0 400c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm192-256c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z"}))," https://github.com/taracque/cordova-plugin-braintree")),(0,o.kt)("h2",null,"Stuck on a Cordova issue?"),(0,o.kt)(i.Z,{className:"cordova-ee-card",header:"Don't waste precious time on plugin issues.",href:"https://ionicframework.com/sales?product_of_interest=Ionic%20Native",mdxType:"DocsCard"},(0,o.kt)("div",null,(0,o.kt)("img",{src:"/docs/icons/native-cordova-bot.png",class:"cordova-ee-img"}),(0,o.kt)("p",null,"If you're building a serious project, you can't afford to spend hours troubleshooting. Ionic\u2019s experts offer premium advisory services for both community plugins and premier plugins."),(0,o.kt)(s.Z,{className:"native-ee-detail",mdxType:"DocsButton"},"Contact Us Today!"))),(0,o.kt)("h2",{id:"installation"},(0,o.kt)("a",{href:"#installation"},"Installation")),(0,o.kt)(l.Z,{defaultValue:"Capacitor",values:[{value:"Capacitor",label:"Capacitor"},{value:"Cordova",label:"Cordova"},{value:"Enterprise",label:"Enterprise"}],mdxType:"Tabs"},(0,o.kt)(c.Z,{value:"Capacitor",mdxType:"TabItem"},(0,o.kt)(p.Z,{className:"language-shell",mdxType:"CodeBlock"},"$ npm install cordova-plugin-braintree ","\n","$ npm install @ionic-native/braintree ","\n","$ ionic cap sync")),(0,o.kt)(c.Z,{value:"Cordova",mdxType:"TabItem"},(0,o.kt)(p.Z,{className:"language-shell",mdxType:"CodeBlock"},"$ ionic cordova plugin add cordova-plugin-braintree ","\n","$ npm install @ionic-native/braintree ","\n")),(0,o.kt)(c.Z,{value:"Enterprise",mdxType:"TabItem"},(0,o.kt)("blockquote",null,"Ionic Enterprise comes with fully supported and maintained plugins from the Ionic Team. \xa0",(0,o.kt)("a",{class:"btn",href:"https://ionic.io/docs/premier-plugins"},"Learn More")," or if you're interested in an enterprise version of this plugin ",(0,o.kt)("a",{class:"btn",href:"https://ionicframework.com/sales?product_of_interest=Ionic%20Enterprise%20Engine"},"Contact Us")))),(0,o.kt)("h2",{id:"supported-platforms"},"Supported Platforms"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Android"),(0,o.kt)("li",{parentName:"ul"},"iOS")),(0,o.kt)("h2",{id:"capacitor"},"Capacitor"),(0,o.kt)("p",null,"Not Compatible"),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"react"},"React"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/native/community#react"},"Learn more about using Ionic Native components in React")),(0,o.kt)("h3",{id:"angular"},"Angular"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Braintree, ApplePayOptions, PaymentUIOptions } from '@ionic-native/braintree/ngx';\n\nconstructor(private braintree: Braintree) { }\n\n...\n\n// Your Braintree `Tokenization Key` from the Braintree dashboard.\n// Alternatively you can also generate this token server-side\n// using a client ID in order to allow users to use stored payment methods.\n// See the [Braintree Client Token documentation](https://developers.braintreepayments.com/reference/request/client-token/generate/node#customer_id) for details.\nconst BRAINTREE_TOKEN = '&lt;YOUR_BRAINTREE_TOKEN>';\n\n// NOTE: Do not provide this unless you have configured your Apple Developer account\n// as well as your Braintree merchant account, otherwise the Braintree module will fail.\nconst appleOptions: ApplePayOptions = {\n  merchantId: '&lt;YOUR MERCHANT ID>',\n  currency: 'USD',\n  country: 'US'\n}\n\nconst paymentOptions: PaymentUIOptions = {\n  amount: '14.99',\n  primaryDescription: 'Your product or service (per /item, /month, /week, etc)',\n}\n\nthis.braintree.initialize(BRAINTREE_TOKEN)\n  .then(() => this.braintree.setupApplePay(appleOptions))\n  .then(() => this.braintree.presentDropInPaymentUI(paymentOptions))\n  .then((result: PaymentUIResult) => {\n    if (result.userCancelled) {\n      console.log(\"User cancelled payment dialog.\");\n    } else {\n      console.log(\"User successfully completed payment!\");\n      console.log(\"Payment Nonce: \" + result.nonce);\n      console.log(\"Payment Result.\", result);\n    }\n  })\n  .catch((error: string) => console.error(error));\n\n")))}v.isMDXComponent=!0}}]);