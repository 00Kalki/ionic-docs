(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[85075],[,function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return d},default:function(){return p}});var a=n(22122),r=n(19756),i=(n(67294),n(3905)),o=(n(41395),n(58215),{title:"ion-router-outlet"}),l={unversionedId:"api/router-outlet",id:"api/router-outlet",isDocsHomePage:!1,title:"ion-router-outlet",description:"Router outlet is a component used in routing within an Angular or Vue app. It behaves in a similar way to Angular's built-in router outlet component and Vue's router view component, but contains the logic for providing a stacked navigation, and animating views in and out.",source:"@site/docs/api/router-outlet.md",sourceDirName:"api",slug:"/api/router-outlet",permalink:"/docs/api/router-outlet",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/api/router-outlet.md",version:"current",frontMatter:{title:"ion-router-outlet"},sidebar:"api",previous:{title:"ion-router-link",permalink:"/docs/api/router-link"},next:{title:"ion-route",permalink:"/docs/api/route"}},d=[{value:"Life Cycle Hooks",id:"life-cycle-hooks",children:[]},{value:"Properties",id:"properties",children:[{value:"animated",id:"animated",children:[]},{value:"animation",id:"animation",children:[]},{value:"mode",id:"mode",children:[]}]}],u={toc:d};function p(t){var e=t.components,n=(0,r.Z)(t,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Router outlet is a component used in routing within an Angular or Vue app. It behaves in a similar way to Angular's built-in router outlet component and Vue's router view component, but contains the logic for providing a stacked navigation, and animating views in and out."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: this component should only be used with Angular and Vue projects. For vanilla or Stencil JavaScript projects, use ",(0,i.kt)("a",{parentName:"p",href:"../router"},(0,i.kt)("inlineCode",{parentName:"a"},"ion-router"))," and ",(0,i.kt)("a",{parentName:"p",href:"../route"},(0,i.kt)("inlineCode",{parentName:"a"},"ion-route")),".")),(0,i.kt)("p",null,"Although router outlet has methods for navigating around, it's recommended to use the navigation methods in your framework's router."),(0,i.kt)("h2",{id:"life-cycle-hooks"},"Life Cycle Hooks"),(0,i.kt)("p",null,"Routes rendered in a Router Outlet have access to specific Ionic events that are wired up to animations"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Event Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Trigger"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ionViewWillEnter")),(0,i.kt)("td",{parentName:"tr",align:null},"Fired when the component routing to is about to animate into view.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ionViewDidEnter")),(0,i.kt)("td",{parentName:"tr",align:null},"Fired when the component routing to has finished animating.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ionViewWillLeave")),(0,i.kt)("td",{parentName:"tr",align:null},"Fired when the component routing from is about to animate.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ionViewDidLeave")),(0,i.kt)("td",{parentName:"tr",align:null},"Fired when the component routing to has finished animating.")))),(0,i.kt)("p",null,"These event tie into Ionic's animation system and can be used to coordinate parts of your app when a Components is done with its animation. These events are not a replacement for your framework's own event system, but an addition."),(0,i.kt)("p",null,"For handling Router Guards, the older ",(0,i.kt)("inlineCode",{parentName:"p"},"ionViewCanEnter")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ionViewCanLeave")," have been replaced with their framework specific equivalent. For Angular, there are ",(0,i.kt)("a",{parentName:"p",href:"https://angular.io/guide/router#milestone-5-route-guards"},"Router Guards"),"."),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"animated"},"animated"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Description")),(0,i.kt)("td",{parentName:"tr",align:null},"If ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", the router-outlet should animate the transition of components.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Attribute")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"animated"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Type")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Default")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true"))))),(0,i.kt)("h3",{id:"animation"},"animation"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Description")),(0,i.kt)("td",{parentName:"tr",align:null},"By default ",(0,i.kt)("inlineCode",{parentName:"td"},"ion-nav")," animates transition between pages based in the mode (ios or material design).",(0,i.kt)("br",null),"However, this property allows to create custom transition using ",(0,i.kt)("inlineCode",{parentName:"td"},"AnimateBuilder")," functions.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Attribute")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Type")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"((baseEl: any, opts?: any) => Animation) \\| undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Default")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,i.kt)("h3",{id:"mode"},"mode"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Description")),(0,i.kt)("td",{parentName:"tr",align:null},"The mode determines which platform styles to use.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Attribute")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"mode"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Type")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"ios" \\| "md"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Default")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"getIonMode(this)"))))))}p.isMDXComponent=!0}]]);